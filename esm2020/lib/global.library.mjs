export const downLoadFile = (x, filename) => {
    const newBlob = new Blob([x], { type: 'binary' });
    const nativator = window.navigator;
    // IE doesn't allow using a blob object directly as link href
    // instead it is necessary to use msSaveOrOpenBlob
    if (nativator && nativator.msSaveOrOpenBlob) {
        nativator.msSaveOrOpenBlob(newBlob);
        return;
    }
    // For other browsers:
    // Create a link pointing to the ObjectURL containing the blob.
    const data = window.URL.createObjectURL(newBlob);
    const link = document.createElement('a');
    link.href = data;
    link.download = filename;
    // this is necessary as link.click() does not work on the latest firefox
    link.dispatchEvent(new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
        view: window
    }));
    setTimeout(() => {
        // For Firefox it is necessary to delay revoking the ObjectURL
        window.URL.revokeObjectURL(data);
        link.remove();
    }, 100);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLmxpYnJhcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9vbmJvYXJkaW5nL3NyYy9saWIvZ2xvYmFsLmxpYnJhcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBTSxFQUFFLFFBQWdCLEVBQUUsRUFBRTtJQUNyRCxNQUFNLE9BQU8sR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDbEQsTUFBTSxTQUFTLEdBQWdCLE1BQWMsQ0FBQyxTQUF1QixDQUFBO0lBQ3JFLDZEQUE2RDtJQUM3RCxrREFBa0Q7SUFDbEQsSUFBSSxTQUFTLElBQUksU0FBUyxDQUFDLGdCQUFnQixFQUFFO1FBQ3pDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwQyxPQUFPO0tBQ1Y7SUFDRCxzQkFBc0I7SUFDdEIsK0RBQStEO0lBQy9ELE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDekIsd0VBQXdFO0lBQ3hFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxVQUFVLENBQUMsT0FBTyxFQUFFO1FBQ3ZDLE9BQU8sRUFBRSxJQUFJO1FBQ2IsVUFBVSxFQUFFLElBQUk7UUFDaEIsSUFBSSxFQUFFLE1BQU07S0FDZixDQUFDLENBQUMsQ0FBQztJQUNKLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWiw4REFBOEQ7UUFDOUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2xCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNaLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbnRlcmZhY2UgSU5hdmlnYXRvciB7XHJcbiAgICBtc1NhdmVPck9wZW5CbG9iOiAoYmxvYk9yQmFzZTY0OiBCbG9iIHwgc3RyaW5nLCBmaWxlbmFtZT86IHN0cmluZykgPT4gdm9pZFxyXG59XHJcbmV4cG9ydCBjb25zdCBkb3duTG9hZEZpbGUgPSAoeDogYW55LCBmaWxlbmFtZTogc3RyaW5nKSA9PiB7XHJcbiAgICBjb25zdCBuZXdCbG9iID0gbmV3IEJsb2IoW3hdLCB7IHR5cGU6ICdiaW5hcnknIH0pO1xyXG4gICAgY29uc3QgbmF0aXZhdG9yOiBJTmF2aWdhdG9yID0gKHdpbmRvdyBhcyBhbnkpLm5hdmlnYXRvciBhcyBJTmF2aWdhdG9yXHJcbiAgICAvLyBJRSBkb2Vzbid0IGFsbG93IHVzaW5nIGEgYmxvYiBvYmplY3QgZGlyZWN0bHkgYXMgbGluayBocmVmXHJcbiAgICAvLyBpbnN0ZWFkIGl0IGlzIG5lY2Vzc2FyeSB0byB1c2UgbXNTYXZlT3JPcGVuQmxvYlxyXG4gICAgaWYgKG5hdGl2YXRvciAmJiBuYXRpdmF0b3IubXNTYXZlT3JPcGVuQmxvYikge1xyXG4gICAgICAgIG5hdGl2YXRvci5tc1NhdmVPck9wZW5CbG9iKG5ld0Jsb2IpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8vIEZvciBvdGhlciBicm93c2VyczpcclxuICAgIC8vIENyZWF0ZSBhIGxpbmsgcG9pbnRpbmcgdG8gdGhlIE9iamVjdFVSTCBjb250YWluaW5nIHRoZSBibG9iLlxyXG4gICAgY29uc3QgZGF0YSA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG5ld0Jsb2IpO1xyXG4gICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgIGxpbmsuaHJlZiA9IGRhdGE7XHJcbiAgICBsaW5rLmRvd25sb2FkID0gZmlsZW5hbWU7XHJcbiAgICAvLyB0aGlzIGlzIG5lY2Vzc2FyeSBhcyBsaW5rLmNsaWNrKCkgZG9lcyBub3Qgd29yayBvbiB0aGUgbGF0ZXN0IGZpcmVmb3hcclxuICAgIGxpbmsuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgnY2xpY2snLCB7XHJcbiAgICAgICAgYnViYmxlczogdHJ1ZSxcclxuICAgICAgICBjYW5jZWxhYmxlOiB0cnVlLFxyXG4gICAgICAgIHZpZXc6IHdpbmRvd1xyXG4gICAgfSkpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgLy8gRm9yIEZpcmVmb3ggaXQgaXMgbmVjZXNzYXJ5IHRvIGRlbGF5IHJldm9raW5nIHRoZSBPYmplY3RVUkxcclxuICAgICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTChkYXRhKTtcclxuICAgICAgICBsaW5rLnJlbW92ZSgpO1xyXG4gICAgfSwgMTAwKTtcclxufSJdfQ==