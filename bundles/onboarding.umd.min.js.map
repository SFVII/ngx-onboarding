{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://onboarding/lib/onboarding.service.ts","ng://onboarding/lib/onboarding.component.ts","ng://onboarding/lib/onboarding.component.html","ng://onboarding/lib/components/update-profil/update-profil.component.html","ng://onboarding/lib/components/update-profil/update-profil.component.ts","ng://onboarding/lib/components/exit-confirm/exit-confirm.component.ts","ng://onboarding/lib/components/exit-confirm/exit-confirm.component.html","ng://onboarding/lib/components/sub-template-profile/sub-template-profile.component.html","ng://onboarding/lib/components/sub-template-profile/sub-template-profile.component.ts","ng://onboarding/lib/template-profile-create/template-profile-create.component.html","ng://onboarding/lib/template-profile-create/template-profile-create.component.ts","ng://onboarding/lib/directives/elevation.ts","ng://onboarding/lib/template-profile-list/template-profile-list.component.html","ng://onboarding/lib/template-profile-list/template-profile-list.component.ts","ng://onboarding/lib/can-deactivate-guard.service.ts","ng://onboarding/lib/components/sub-onboarding-create/sub-onboarding-create.component.html","ng://onboarding/lib/components/sub-onboarding-create/sub-onboarding-create.component.ts","ng://onboarding/lib/onboarding-create/onboarding-create.component.html","ng://onboarding/lib/onboarding-create/onboarding-create.component.ts","ng://onboarding/lib/onboarding-list/onboarding-list.component.html","ng://onboarding/lib/onboarding-list/onboarding-list.component.ts","ng://onboarding/lib/onboarding.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","OnboardingService","config","http","canExit$","Subject","token","BehaviorSubject","_token","asObservable","templates","_templates","onboarding","_onboarding","contacts","_contacts","authentication","EventEmitter","lang","mainPath","buildHeaders","initInstance","_this","subscribe","bearer","header","HttpHeaders","Authorization","_auth","auth","endpoint","Error","user","locale","guid","random","Math","floor","toString","substring","createProfil","data","options","headers","post","updateProfil","put","deleteProfil","id","delete","getProfil","get","getAllProfil","getAllTags","getContacts","split","userList","asignProfil","getTags","getCategory","createOnboarding","updateOnboarding","deleteOnboarding","getOnboarding","getAllOnboarding","recall","core","ɵɵinject","HttpClient","factory","ɵfac","OnboardingComponent","service","router","ngOnInit","url","indexOf","console","log","ɵɵdirectiveInject","Router","selectors","decls","vars","template","rf","ctx","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵtextInterpolate","UpdateProfilComponent","dialogRef","form","tags","matIconList","onConfirm","close","onClose","onSelectPicto","picto","preventDefault","patchValue","Picto","isPictoListShow","onShowPictoList","MAT_DIALOG_DATA","dialog","MatDialogRef","consts","$event","ExitConfirmComponent","confirm","cancel","ɵɵpureFunction0","_c0","ɵɵrestoreView","_r631","option_r629","$implicit","ɵɵnextContext","onEditChip","ctx_r633","removeKeyword","j","_r635","ctx_r637","keyUp","currentChip","ctx_r615","separatorKeysCodes","ctx_r616","field","defaultValue","ctx_r617","type","_r644","getConditionValues","SubTemplateProfileComponent","onAddKeywordFromInput","onKeyPress","onDrop","onAddNewField","onRemoveField","onChangeType","onRemoveKeyword","onAddNewSubLevelField","onExpendMore","onChangeLabel","onCheckedChip","onCheckedDefault","onGetConditionValues","conditionData","chipControl","FormControl","Set","ENTER","COMMA","SEMICOLON","prevValue","showCondition","toggleChip","chip","emit","drop","event","addKeywordFromInput","prev","addNewField","removeField","changeType","addNewSubLevelField","expendMore","expand","ingoreDefaultAction","changeLabel","key","defineProperty","checkedDefault","onShowCondition","inputs","outputs","ngContentSelectors","_c3","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵprojection","i0.ɵɵclassMap","_r405","name","ctx_r409","i_r395","index","cat_r394","onEditCategoryName","_c0$1","i0.ɵɵtextInterpolate2","_r455","l_r444","k_r437","j_r430","i_r422","c2_r443","child_r436","forms","ctx_r442","_r518","field_r429","ctx_r435","_r567","category_r421","ctx_r428","editable","TemplateProfileCreateComponent","fb","route","validCategory","currentProfil","canExit","parent","editIndex","showProfileName","categories","defaultCategorie","deleteable","expandMore","expandOnboarding","suffixEndpoint","checked","size","isMandatory","otherValue","subLevel","isConditional","conditionValue","conditionLocation","selected","canDeactivate","open","snapshot","paramMap","group","Name","Validators","required","Description","Tags","Status","valueChanges","c","_a","_c","_b","onAddNewCategory","params","_i","splice","onRemoveCategory","onChangeCategory","every","cat","onSubmit","valid","expandCategories","filter","map","sub","child","ch","navigate","exist","find","opt","toLocaleLowerCase","target","keyword","option","input","prevIndex","findIndex","trim","previousContainer","container","moveItemInArray","previousIndex","currentIndex","transferArrayItem","onShowCategory","arr","charAt","toUpperCase","slice","join","forEach","openDialog","afterClosed","confirmed","onPassInEditMode","onEdit","onAcrelink","conditionsList","level","categoryIndex","possibleValues","k","formIndex","l","subIndex","FormBuilder","ActivatedRoute","MatDialog","MaterialElevationDirective","element","renderer","defaultElevation","raisedElevation","setElevation","ngOnChanges","_changes","onMouseEnter","onMouseLeave","amount","Array","from","nativeElement","classList","startsWith","removeClass","newClass","addClass","ElementRef","Renderer2","hostBindings","TemplateProfileListComponent","displayedColumns","datas","dataSource","MatTableDataSource","setTimeout","getAllProfils","onAddProfil","onDelete","stopPropagation","_id","profile","paginator","sort","viewQuery","MatPaginator","MatSort","CanDeactivateGuard","component","state","ctx_r706","_c0$3","opt_r710","ctx_r709","ctx_r714","ctx_r702","ctx_r721","ctx_r703","ctx_r704","ctx_r705","SubOnboardingCreateComponent","formatOther","other","checkSubForm","hasSubForm","_c2$1","child_r678","k_r679","l_r684","field_r673","j_r674","category_r670","i_r671","OnboardingCreateComponent","selectedMenu","onCreateDynamicForm","currentOnboarding","currentTemplate","vtemplates","TemplateId","onSelectContactTemplate","isSelected","onSelect","existSubForm","forms_1","forms_1_1","checkMandatory","currentActive","String","isExpanded","forms_2","forms_2_1","onCheckConditionLocationValue","iscondition","location","array","check","forms_3","forms_3_1","onSelectMenu","ctx_r739","onboardingList","inputSearch","i0.ɵɵclassProp","_r741","triggerChange","ctx_r731","OnboardingListComponent","search","columnDefinitions","order","class","module","CellsComponentList","DateFormat","NameAvatar","override","_loading_table","HiddenIndex","cancelSearch","x","row","ContactName","vcontacts","Email","CoreMatTable","active","direction","valueStart","valueEnd","relativeTo","queryParams","page","tab","queryParamsHandling","onBoardingRoutes","path","children","OnboardingModule","parentModule","forRoot","ngModule","providers","provide","useValue","imports","FormsModule","MatFormFieldModule","MatButtonModule","CommonModule","BrowserModule","BrowserAnimationsModule","ReactiveFormsModule","MatCheckboxModule","MatIconModule","MatSelectModule","MatInputModule","MatChipsModule","MatGridListModule","MatRadioModule","MatPaginatorModule","CdkTableModule","MatSortModule","MatTableModule","RouterModule","forChild","ScrollToModule","DragDropModule","MatCardModule","MatDialogModule","MatStepperModule","MatProgressBarModule","MatTooltipModule","TableModule","MatTabsModule","HttpClientModule","declarations","ngxScrollTo","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { OnboardingInterface, OnboardingUser } from '../interface/OnboardingInterface';\n\n@Injectable()\nexport class OnboardingService {\n  canExit$: Subject<boolean> = new Subject<boolean>();\n  private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  private _token = this.token.asObservable();\n  public templates: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public _templates = this.templates.asObservable();\n  public onboarding: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public _onboarding = this.onboarding.asObservable();\n  public contacts: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public _contacts = this.contacts.asObservable();\n  public authentication: EventEmitter<OnboardingUser> = new EventEmitter<OnboardingUser>();\n  private header: HttpHeaders;\n  public locale: string;\n  private endpoint: string;\n  private user: OnboardingUser;\n  public lang = new BehaviorSubject('');\n  public _auth: boolean;\n  public mainPath: string = \"\"\n  constructor(@Inject('__NgxOnboarding__') config: OnboardingInterface, private http: HttpClient) {\n    this.buildHeaders();\n    this.initInstance(config);\n  }\n\n\n  /**\n * @private\n * Generate Header for backend call\n */\n  private buildHeaders() {\n    this._token.subscribe((token: string) => {\n      const bearer: string = 'Bearer ' + token;\n      this.header = new HttpHeaders({\n        'Authorization': bearer\n      });\n    });\n  }\n\n\n  /**\n * @param config\n * @private\n * Initialize Data for User Instance\n */\n  private initInstance(config: OnboardingInterface) {\n    this._auth = !!config.auth;\n    if (config.endpoint) {\n      this.endpoint = config.endpoint;\n      if (config.auth) {\n        this.authentication.subscribe((user: OnboardingUser) => {\n          if (!user.lang && config.lang) {\n            user.lang = config.lang;\n          }\n          this.locale = user.lang;\n          this.lang.next(this.locale);\n          if (user.token) {\n            this.token.next(user.token);\n          }\n          this.user = user;\n        });\n      } else if (config.lang) {\n        this.locale = config.lang;\n        this.lang.next(this.locale);\n        this.user = {\n          lang: config.lang,\n          token: config.token\n        };\n      }\n      if (config.token) {\n        this.token.next(config.token);\n      }\n    } else {\n      return new Error('Please provide endpoint');\n    }\n  }\n\n  /**\n * @private\n * Generate Random uniq Id for Konverso Instance\n */\n  private guid() {\n    let random = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    };\n    return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\n  }\n\n\n\n  /**\n * Send Profil To backend\n * @Post Profil\n */\n  public async createProfil(data: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.post(`${this.endpoint}/profils`, data, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async updateProfil(data: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.put(`${this.endpoint}/profils`, data, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async deleteProfil(id: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.delete(`${this.endpoint}/profils/${id}`, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n\n  public async getProfil(id: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.get(`${this.endpoint}/profils/${id}`, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async getAllProfil(): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.get(`${this.endpoint}/profils`, options)\n        .subscribe((data: any) => {\n          this.templates.next(data)\n          resolve(data);\n        });\n    });\n  }\n  public async getAllTags(): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.get(`${this.endpoint}/tags`, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n  public async getContacts(): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this._contacts.subscribe((contacts) => {\n        if (!contacts) {\n          this.http.get(`${this.endpoint.split('/onboarding')[0]}/contact/siteList`, options)\n            .subscribe((data: any) => {\n              this.contacts.next(data.userList)\n              resolve(data.userList);\n            });\n        } else {\n          resolve(contacts)\n        }\n      })\n    });\n  }\n\n\n\n\n  async asignProfil() {\n\n  }\n\n  async getTags() {\n\n  }\n\n\n  async getCategory() {\n\n  }\n\n\n  // CRUD ONBOARDING\n\n  public async createOnboarding(data: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.post(`${this.endpoint}/onboarding`, data, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async updateOnboarding(data: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.put(`${this.endpoint}/onboarding`, data, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async deleteOnboarding(id: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.delete(`${this.endpoint}/onboarding/${id}`, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n\n  public async getOnboarding(id: any): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      const options: any = {\n        headers: this.header\n      };\n      this.http.get(`${this.endpoint}/onboarding/${id}`, options)\n        .subscribe((data: any) => {\n          resolve(data);\n        });\n    });\n  }\n\n  public async getAllOnboarding(recall = false): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      this._onboarding.subscribe((onboarding) => {\n        if (!onboarding || recall) {\n          const options: any = {\n            headers: this.header\n          };\n          this.http.get(`${this.endpoint}/onboarding`, options)\n            .subscribe((data: any) => {\n              this.onboarding.next(data)\n              resolve(data);\n            });\n        } else {\n          resolve(onboarding)\n        }\n      })\n    });\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { OnboardingService } from './onboarding.service';\nimport { Router } from '@angular/router';\n\n// @ts-ignore\n@Component({\n  selector: 'ngx-onboarding',\n  templateUrl: 'onboarding.component.html',\n  styleUrls: ['../../assets/main.scss']\n})\nexport class OnboardingComponent implements OnInit {\n  constructor(private service: OnboardingService, private router: Router) {\n  }\n  ngOnInit() {\n    if (this.router.url.indexOf('onboarding') > -1) {\n      this.service.mainPath = this.router.url.split('/onboarding')[0] + '/onboarding';\n      console.log('--------------------------', this.service.mainPath);\n    }\n\n  }\n\n\n}\n","<router-outlet></router-outlet>","<mat-dialog-content>\n    <main>\n        <form [formGroup]=\"form\">\n    <div class=\"box-title\">\n        <div class=\"box-title-content\">\n            <h3 class=\"title\">Modification votre profil d’onboarding</h3>\n            <p>Sélectionnez l’icon de votre choix et modifiez votre profil d’onboarding</p>\n            <div class=\"profil-name-content\">\n                <button class=\"add-picto\" mat-raised-button color=\"primary\" (click)=\"onShowPictoList($event)\">\n                    <mat-icon>{{form.get('Picto').value===\"\" ? 'contact_phone' :form.get('Picto').value}}</mat-icon>\n                </button>\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Nom de votre nouveau profil</mat-label>\n                    <input type=\"text\" matInput formControlName=\"Name\" placeholder=\"Ex. Manager\" />\n                </mat-form-field>\n                <div class=\"list-picto\" *ngIf=\"isPictoListShow\">\n                    <mat-icon *ngFor=\"let icon of matIconList\"\n                        [style.color]=\"form.get('Picto').value===icon.name ? '#830B6B':'#000'\"\n                        (click)=\"onSelectPicto($event,icon.name)\">\n                        {{icon.name}}\n                    </mat-icon>\n                </div>\n            </div>\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                <mat-label>Déscription</mat-label>\n                <textarea type=\"text\" matInput formControlName=\"Description\" rows=\"4\" placeholder=\"\"></textarea>\n            </mat-form-field>\n            <mat-form-field class=\"full-width margin-top\" appearance=\"outline\">\n                <mat-label>Tags</mat-label>\n                <mat-select formControlName=\"Tags\" required>\n                    <mat-option *ngFor=\"let tag of tags\" [value]=\"tag\">{{tag}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-checkbox class=\"form-field\" formControlName=\"Status\">Active</mat-checkbox>\n            <div class=\"action\">\n                <div class=\"link-create-profil\">\n                    <button class=\"link-add-profil\" mat-raised-button\n                        color=\"primary\" (click)='onClose()'>\n                        Annuler\n                    </button>\n                </div>\n                <div class=\"link-create-profil\">\n                    <button class=\"link-add-profil\"\n                        [style.opacity]=\"(form.get('Name').value==='' || form.get('Tags').value=='') ? 0.4 : 1\"\n                        [disabled]=\"form.get('Name').value==='' || form.get('Tags').value==''\" mat-raised-button\n                        color=\"primary\" (click)='onConfirm()'>\n                        Modifier un profil\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>    \n</form>\n</main>\n</mat-dialog-content>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-update-profil',\n  templateUrl: './update-profil.component.html',\n  styleUrls: ['./update-profil.component.scss']\n})\nexport class UpdateProfilComponent implements OnInit {\n  form:FormGroup;\n  tags:any;\n  matIconList:any;\n  isPictoListShow:boolean\n  constructor(  @Inject(MAT_DIALOG_DATA) private data: any,\n  private dialogRef: MatDialogRef<UpdateProfilComponent>) { \n    this.form=this.data.form;\n    this.tags=this.data.tags;\n    this.matIconList=this.data.matIconList;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  } \n  onClose(): void {\n    this.dialogRef.close(false);\n  }\n\n\n  onSelectPicto(e, picto) {\n    e.preventDefault();\n    this.form.patchValue({ Picto: picto });\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n\n  onShowPictoList(e) {\n    e.preventDefault();\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OnboardingService } from '../../onboarding.service';\n\n@Component({\n  selector: 'lib-exit-confirm',\n  templateUrl: './exit-confirm.component.html',\n  styleUrls: ['./exit-confirm.component.scss']\n})\nexport class ExitConfirmComponent implements OnInit {\n\n  constructor(  @Inject(MAT_DIALOG_DATA) private data: any,\n  private dialogRef: MatDialogRef<ExitConfirmComponent>, private service :OnboardingService)  { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(): void {\n    this.dialogRef.close(true);\n    this.service.canExit$.next(true)\n  } \n  cancel(): void {\n    this.dialogRef.close(false);\n    this.service.canExit$.next(false)\n  }\n\n}\n","<mat-dialog-content>\n    <div class=\"header\">\n        Attention !\n    </div>\n    <p>Toutes vos données seront perdues, êtes-vous certain de vouloir continuer ?</p>\n    <button (click)=\"confirm()\" mat-button class=\"nowboard-btn\" style=\"margin-top: 10px\">\n        Confirmer\n    </button>\n\n    <button (click)=\"cancel()\" mat-button class=\"cancel_btn\">\n        Annuler\n    </button>\n</mat-dialog-content>","<div class=\"field-item\">\n    <mat-form-field class=\"form-field field-size\" [class]=\"!field.editable ? 'readonly' :'' \" appearance=\"outline\">\n        <mat-label>Label</mat-label>\n        <input type=\"text\" [readonly]=\"!field.editable\" matInput required [ngModelOptions]=\"{standalone: true}\"\n            [(ngModel)]=\"field.label\" placeholder=\"\" (ngModelChange)=\"changeLabel(field.label, field.key)\" />\n    </mat-form-field>\n\n    <mat-form-field style=\"display: none;\" class=\"form-field field-size\" [class]=\"!field.editable ? 'readonly' :'' \"\n        appearance=\"outline\">\n        <mat-label>Clé du champ</mat-label>\n        <input type=\"text\" [readonly]=\"!field.editable\" matInput required [ngModelOptions]=\"{standalone: true}\"\n            [(ngModel)]=\"field.key\" placeholder=\"\" />\n    </mat-form-field>\n\n    <mat-form-field class=\"form-field field-size\" appearance=\"outline\">\n        <mat-label>Type</mat-label>\n        <mat-select [disabled]=\"!field.editable\" [(ngModel)]=\"field.type\" required [ngModelOptions]=\"{standalone: true}\"\n            (ngModelChange)=\"changeType(field.type,i,j)\">\n            <mat-option value=\"text\">Text(80)</mat-option>\n            <mat-option value=\"textarea\">Text(80+)</mat-option>\n            <mat-option value=\"radio\">Radio</mat-option>\n            <mat-option value=\"select\">Selecteur</mat-option>\n            <mat-option value=\"checkbox\">Checkbox</mat-option>\n            <mat-option value=\"checkbox_multiple\">Checkbox multiple</mat-option>\n            <mat-option value=\"email\">Email</mat-option>\n            <mat-option value=\"password\">Password</mat-option>\n            <mat-option value=\"date\">Date</mat-option>\n            <mat-option value=\"tel\">Phone</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <ng-container [ngSwitch]=\"field.type\">\n        <div *ngSwitchCase=\"'checkbox'\" class=\"flex-auto w-30 field-size\">\n            <mat-checkbox class=\"form-field\" [(ngModel)]=\"field.expandOnboarding\" [ngModelOptions]=\"{standalone: true}\">\n                Coché par\n                default\n            </mat-checkbox>\n        </div>\n        <mat-form-field\n            *ngSwitchCase=\"['select', 'radio','checkbox_multiple'].includes(field.type) ? field.type : !field.type\"\n            class=\"flex-auto w-30 field-size\" appearance=\"outline\">\n            <mat-label> Valeur par default </mat-label>\n            <mat-chip-list #childList=\"cdkDropList\" [cdkDropListData]=\"field.defaultValue\" cdkDropList\n                (cdkDropListDropped)=\"drop($event)\" #chipList aria-label=\"Video keywords; let index=index\" multiple\n                selectable>\n                <mat-chip style=\"min-height: 25px;\" *ngFor=\"let option of field.defaultValue\"\n                    [selected]=\"option.checked\" [value]=\"option.value\" [removable]=\"true\"\n                    (dblclick)=\"toggleChip(option)\" (click)=\"onEditChip(option)\" (removed)=\"removeKeyword(option, i,j)\"\n                    cdkDrag>\n                    {{option.value}}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input #chipsInput placeholder=\"add...\" [matChipInputFor]=\"chipList\" [matChipInputAddOnBlur]=\"true\"\n                    (matChipInputTokenEnd)=\"addKeywordFromInput($event, i,j)\"\n                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" (keyup)=\"keyUp($event,i,j)\"\n                    [(ngModel)]=\"currentChip\">\n            </mat-chip-list>\n        </mat-form-field>\n        <mat-form-field *ngSwitchCase=\"'textarea'\" class=\"form-field field-size\" appearance=\"outline\">\n            <mat-label>Valeur par default</mat-label>\n            <input type=\"text\" matInput [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"field.defaultValue\"\n                placeholder=\"Description...\">\n        </mat-form-field>\n\n        <mat-form-field *ngSwitchDefault class=\"form-field field-size\" [style.opacity]=\"field.type!=='tel' ? 1 :0\"\n            appearance=\"outline\">\n            <mat-label>Valeur par default</mat-label>\n            <input [type]=\"field.type\" [disabled]=\"field.type==='tel'\" matInput [ngModelOptions]=\"{standalone: true}\"\n                [(ngModel)]=\"field.defaultValue\" placeholder=\"\">\n        </mat-form-field>\n    </ng-container>\n\n    <div class=\"checkbox-condition\">\n        <mat-checkbox *ngIf=\"field.editable\" class=\"form-field\" [(ngModel)]=\"field.isConditional\"\n            [ngModelOptions]=\"{standalone: true}\" (ngModelChange)='getConditionValues()'>\n            à condition\n        </mat-checkbox>\n        <div class=\"condition-container\" *ngIf=\"showCondition\">\n            <mat-form-field class=\"form-field field-size full-width\" appearance=\"outline\">\n                <mat-label>Champ de condition :</mat-label>\n                <mat-select [(ngModel)]=\"field.conditionLocation\" required [ngModelOptions]=\"{standalone: true}\">\n                    <mat-option *ngFor=\"let cond of conditionData\" [value]=\"cond\">{{cond.label}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\"\n                [(ngModel)]=\"field.conditionValue\">\n                <mat-radio-button class=\"example-radio-button\"\n                    *ngFor=\"let item of field.conditionLocation.possibleValues\" [value]=\"item.value\">\n                    {{item.value}}\n                </mat-radio-button>\n            </mat-radio-group>\n            <button mat-button color=\"primary\" (click)='onShowCondition($event)'>\n                <mat-icon>close</mat-icon>Fermer\n            </button>\n        </div>\n    </div>\n\n    <mat-icon (click)='onShowCondition()' class=\"condition-help\" *ngIf=\"field.isConditional\"\n        matTooltip=\"Paramètrer la condition ici !\">help\n    </mat-icon>\n    <mat-checkbox class=\"form-field\" [(ngModel)]=\"field.isMandatory\" [ngModelOptions]=\"{standalone: true}\">\n        obligatoire\n    </mat-checkbox>\n    <button class=\"transparent-button\" [disabled]=\"field.subLevel>2 || !field.editable\"\n        [style.opacity]=\"(field.subLevel>2 || !field.editable) ? 0 :1\" mat-mini-fab color=\"success\"\n        (click)='addNewSubLevelField($event)' matTooltip=\"Ajouter une sous-catégorie\">\n        <mat-icon>device_hub</mat-icon>\n    </button>\n\n    <button class=\"expand-button\" [disabled]=\"!(field.forms && field.forms.length>0)\"\n        [style.opacity]=\"field.forms && field.forms.length>0 ? 1 :0\" mat-mini-fab color=\"primary\"\n        (click)=\"expendMore($event,field)\">\n        <mat-icon *ngIf=\"!field.expandMore\">expand_less</mat-icon>\n        <mat-icon *ngIf=\"field.expandMore\">expand_more</mat-icon>\n    </button>\n</div>\n\n<!-- <div class=\"add-button-container\" *ngIf=\"length-1===j\">\n    <button style=\"margin:10px auto\" [disabled]=\"length-1!==j\" [style.opacity]=\"length-1===j ? 1 :0\" mat-raised-button\n        color=\"primary\" (click)='addNewField($event,i)'>\n        <mat-icon>add_box</mat-icon>\n        <span>Ajouter un champ</span>\n    </button>\n</div> -->\n\n<ng-content select=\".child\"></ng-content>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ENTER, COMMA, SEMICOLON } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'lib-sub-category',\n  templateUrl: './sub-template-profile.component.html',\n  styleUrls: ['./sub-template-profile.component.scss']\n})\nexport class SubTemplateProfileComponent implements OnInit {\n  @Input() field: any\n  @Input() length: any\n  @Input() i: any\n  @Input() j: any\n  @Output() onAddKeywordFromInput = new EventEmitter<any>()\n  @Output() onKeyPress = new EventEmitter<any>()\n  @Output() onDrop = new EventEmitter<any>()\n  @Output() onAddNewField = new EventEmitter<any>()\n  @Output() onRemoveField = new EventEmitter<any>()\n  @Output() onChangeType = new EventEmitter<any>()\n  @Output() onRemoveKeyword = new EventEmitter<any>()\n  @Output() onAddNewSubLevelField = new EventEmitter<any>()\n  @Output() onExpendMore = new EventEmitter<any>()\n  @Output() onChangeLabel = new EventEmitter<any>()\n  @Output() onCheckedChip = new EventEmitter<any>()\n  @Output() onCheckedDefault = new EventEmitter<any>()\n  @Output() onGetConditionValues = new EventEmitter<any>()\n  @Input() conditionData=[]\n\n  chipControl = new FormControl(new Set());\n\n  separatorKeysCodes = [ENTER, COMMA, SEMICOLON];\n  currentChip=\"\"\n  prevValue=\"\"\n  showCondition=false\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  drop(event) {\n    this.onDrop.emit(event)\n  }\n\n  addKeywordFromInput(event, i, j) {\n    this.onAddKeywordFromInput.emit({ event,prev:this.prevValue, i, j });\n  }\n\n  keyUp(event, i, j) {\n    this.onKeyPress.emit({ event, i, j })\n  }\n\n  addNewField(event, i) {\n    event.preventDefault()\n    this.onAddNewField.emit({ event, i })\n  }\n\n  removeField(event, i, j) {\n    event.preventDefault()\n    this.onRemoveField.emit({ i, j })\n  }\n\n  changeType(type, i, j) {\n    this.onChangeType.emit({ type, i, j })\n  }\n\n  removeKeyword(event, i, j) {\n    this.onRemoveKeyword.emit({ event, i, j })\n  }\n  addNewSubLevelField(e) {\n    e.preventDefault()\n    this.onAddNewSubLevelField.emit(true)\n  }\n  expendMore(e, field) {\n    e.preventDefault()\n    this.onExpendMore.emit({expand:true, field})\n  }  \n  getConditionValues() {\n    this.onGetConditionValues.emit(true)\n  }\n\n  ingoreDefaultAction(e) {\n    e.preventDefault()\n  }\n\n  changeLabel(label,key){\n    this.onChangeLabel.emit({label, key})\n  }\n\n  toggleChip = (chip: any) => {\n    this.onCheckedChip.emit(chip)\n  }\n\n  onEditChip(chip){\n    if(chip.value===this.currentChip){\n      this.currentChip=\"\"\n      this.prevValue=\"\"\n    }else{\n      this.currentChip=chip.value;\n      this.prevValue=chip.value\n    }\n  }\n\n  get chips() { return this.chipControl.value; }\n\n  checkedDefault(value){\n    this.onCheckedDefault.emit(value)\n  }\n\n  onShowCondition(event=null){\n    if(event){\n      event.preventDefault()\n    }\n    this.showCondition=!this.showCondition\n  }\n\n  // checked(locationValue,value){\n  //   return locationValue.includes(value)\n  // }\n\n}\n","<main>\n    <form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n        <div class=\"box-title\" *ngIf=\"showProfileName\">\n            <div class=\"box-title-content\">\n                <h3 class=\"title\">Création d’un nouveau profil d’onboarding</h3>\n                <p>Sélectionnez l’icon de votre choix et indiquez le nom de votre nouveau profil d’onboarding</p>\n                <div class=\"profil-name-content\">\n                    <button class=\"add-picto\" mat-raised-button color=\"primary\" (click)=\"onShowPictoList($event)\">\n                        <mat-icon>{{form.get('Picto').value===\"\" ? 'contact_phone' :form.get('Picto').value}}</mat-icon>\n                    </button>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Nom de votre nouveau profil</mat-label>\n                        <input type=\"text\" matInput formControlName=\"Name\" placeholder=\"Ex. Manager\" />\n                    </mat-form-field>\n                    <div class=\"list-picto\" *ngIf=\"isPictoListShow\">\n                        <mat-icon *ngFor=\"let icon of matIconList\"\n                            [style.color]=\"form.get('Picto').value===icon.name ? '#830B6B':'#000'\"\n                            (click)=\"onSelectPicto($event,icon.name)\">\n                            {{icon.name}}\n                        </mat-icon>\n                    </div>\n                </div>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Déscription</mat-label>\n                    <textarea type=\"text\" matInput formControlName=\"Description\" rows=\"4\" placeholder=\"\"></textarea>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Tags</mat-label>\n                    <mat-select formControlName=\"Tags\" required>\n                        <mat-option *ngFor=\"let tag of tags\" [value]=\"tag\">{{tag}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-checkbox class=\"form-field\" formControlName=\"Status\">Active</mat-checkbox>\n                <div class=\"link-create-profil\">\n                    <button class=\"link-add-profil\"\n                        [style.opacity]=\"(form.get('Name').value==='' || form.get('Tags').value=='') ? 0.4 : 1\"\n                        [disabled]=\"form.get('Name').value==='' || form.get('Tags').value==''\" mat-raised-button\n                        color=\"primary\" (click)='onShowCategory()'>\n                        {{id !== \"0\" ? 'Modifier un profil' :'Créer un nouveau profil'}}\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" *ngIf=\"!showProfileName\">\n            <!-- <div class=\"category\"> -->\n\n            <div class=\"side-bar\">\n                <div class=\"summary\">\n                    <h3><span>{{this.form.get('Name').value}}</span>\n                        <mat-icon (click)=\"openDialog()\">edit</mat-icon>\n                    </h3>\n                    <ol type=\"I\">\n                        <li class=\"li-title\" *ngFor=\"let cat of categories;  let i=index\">\n                            <span [class]=\"editIndex===i ? 'edition-mode':''\">\n                                <span [ngxScrollTo]=\"'#'+cat.name\" (click)=\"onExpendMore({field:cat},i)\"\n                                    *ngIf=\"editIndex!==i\">{{cat.name}}</span>\n                                <input (blur)=\"onEdit()\" #edit *ngIf=\"editIndex===i\" type=\"text\" [(ngModel)]=\"cat.name\"\n                                    [ngModelOptions]=\"{standalone: true}\"\n                                    (ngModelChange)=\"onEditCategoryName(i,cat.name)\">\n                                <mat-icon (click)=\"onPassInEditMode(i)\">edit</mat-icon>\n                            </span>\n                            <ol>\n                                <ng-container *ngFor=\"let sub of cat.forms;let j=index\">\n                                    <ng-container *ngIf=\"sub?.forms\">\n                                        <li [class]=\"sub.expandMore ? 'sub-title active' :'sub-title'\"\n                                            (click)=\"onExpendMore({field:sub},i,j)\">\n                                            <span [ngxScrollTo]=\"'#'+sub.key\">{{j+1}}. {{sub.label}}</span>\n                                        </li>\n                                    </ng-container>\n                                </ng-container>\n                            </ol>\n                        </li>\n                    </ol>\n                    <button mat-button class=\"add-category transparent\" (click)='onAddNewCategory($event)'>\n                        <mat-icon>add_box</mat-icon>\n                        Ajouter une nouvelle catégorie\n                    </button>\n                </div>\n                <button mat-button class=\"register-button\" type=\"submit\">\n                    <!-- <mat-icon>check</mat-icon> -->\n                    Enregistrer le profil\n                </button>\n            </div>\n            <div class=\"fields\" cdkDropListGroup>\n                <div class=\"example-list mt-20\" #parentList=\"cdkDropList\" cdkDropList [cdkDropListData]=\"categories\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"category-item\" *ngFor=\"let category of categories;  let i=index\" cdkDrag\n                        [id]=\"category.name\">\n                        <div class=\"left-action move-icons\" cdkDragHandle>\n                            <button class=\"transparent-button\" [disabled]=\"!category.deleteable\"\n                                (click)=\"onRemoveCategory($event,i)\" mat-raised-button>\n                                <mat-icon [style.opacity]=\"!category.deleteable ? 0 :1\">delete</mat-icon>\n                            </button>\n                        </div>\n                        <div class=\"field-content\">\n                            <div class=\"field-item\">\n                                <input class=\"example-full-width input-category-name\" type=\"text\" required\n                                    [readonly]=\"categories.length<4 || !category.editable\"\n                                    [readonly]=\"!category.editable\" [(ngModel)]=\"category.name\"\n                                    [ngModelOptions]=\"{standalone: true}\" placeholder=\"Saisir le nom de la catégorie\" />\n                            </div>\n                            <div #childList=\"cdkDropList\" *ngIf=\"category.forms\" [cdkDropListData]=\"category.forms\"\n                                cdkDropList (cdkDropListDropped)=\"drop($event)\">\n                                <ng-container *ngIf=\"category.expandMore\">\n                                    <div class=\"\" *ngFor=\"let field of category.forms;let j=index\" [id]=\"field.key\">\n                                        <div cdkDrag>\n                                            <div class=\"fields-content\">\n                                                <div class=\"button-action\">\n                                                    <button [disabled]=\"!field.deleteable\" mat-mini-fab color=\"warn\"\n                                                        class=\"delete-field transparent-button\"\n                                                        (click)=\"onRemoveField(i,j)\">\n                                                        <mat-icon [style.opacity]=\"!field.deleteable ? 0 :1\">delete\n                                                        </mat-icon>\n                                                    </button>\n                                                </div>\n                                                <div class=\"fields-container\"\n                                                    [class]=\"!field.deleteable ? 'disabled' :''\">\n                                                    <lib-sub-category [field]=\"field\" [length]=\"category?.forms?.length\"\n                                                        [i]=\"i\" [j]=\"j\"\n                                                        (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,$event.prev,i,j)\"\n                                                        (onKeyPress)=\"onKeyPress($event.event,i,j)\"\n                                                        (onAddNewField)=\"onAddNewField(i)\"\n                                                        (onRemoveField)=\"onRemoveField(i,j)\"\n                                                        (onChangeType)=\"onChangeType(field.type,i,j)\"\n                                                        (onRemoveKeyword)=\"removeKeyword($event.event,i,j)\"\n                                                        (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j)\"\n                                                        (onExpendMore)=\"onExpendMore($event,i,j)\"\n                                                        (onChangeLabel)=\"onChangeLabel($event,i,j)\"\n                                                        (onCheckedChip)=\"onCheckedChip($event,i,j)\"\n                                                        (onDrop)=\"drop($event)\"\n                                                        (onCheckedDefault)=\"onCheckedDefault($event,i,j)\"\n                                                        [conditionData]=\"conditionData\"\n                                                        (onGetConditionValues)=\"getConditionValues()\">\n                                                        <div *ngIf=\"field.expandMore\" class=\"child\">\n                                                            <div #childList=\"cdkDropList\" *ngIf=\"field.forms\"\n                                                                [cdkDropListData]=\"field.forms\" cdkDropList\n                                                                (cdkDropListDropped)=\"drop($event)\">\n                                                                <div class=\"\"\n                                                                    *ngFor=\"let child of field.forms;let k=index\"\n                                                                    [id]=\"child.key\">\n                                                                    <div cdkDrag>\n                                                                        <div class=\"fields-content\">\n                                                                            <div\n                                                                                class=\"button-action child-2-background\">\n                                                                                <button [disabled]=\"!child.deleteable\"\n                                                                                    mat-mini-fab color=\"warn\"\n                                                                                    class=\"delete-field transparent-button\"\n                                                                                    (click)=\"onRemoveField(i,j,k)\">\n                                                                                    <mat-icon\n                                                                                        [style.opacity]=\"!child.deleteable ? 0 :1\">\n                                                                                        delete</mat-icon>\n                                                                                </button>\n                                                                            </div>\n                                                                            <div class=\"fields-container\">\n                                                                                <lib-sub-category [field]=\"child\"\n                                                                                    [length]=\"field?.forms?.length\"\n                                                                                    [i]=\"j\" [j]=\"k\"\n                                                                                    (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,$event.prev,i,j,k)\"\n                                                                                    (onKeyPress)=\"onKeyPress($event.event,i,j,k)\"\n                                                                                    (onAddNewField)=\"onAddNewField(i, j)\"\n                                                                                    (onRemoveField)=\"onRemoveField(i,j,k)\"\n                                                                                    (onChangeType)=\"onChangeType(child.type,i,j,k)\"\n                                                                                    (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k)\"\n                                                                                    (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k)\"\n                                                                                    (onExpendMore)=\"onExpendMore($event,i,j,k)\"\n                                                                                    (onChangeLabel)=\"onChangeLabel($event,i,j,k)\"\n                                                                                    (onCheckedChip)=\"onCheckedChip($event,i,j,k)\"\n                                                                                    (onDrop)=\"drop($event)\"\n                                                                                    (onCheckedDefault)=\"onCheckedDefault($event,i,j,k)\"\n                                                                                    [conditionData]=\"conditionData\"\n                                                                                    (onGetConditionValues)=\"getConditionValues()\">\n                                                                                    <div *ngIf=\"child.expandMore\"\n                                                                                        class=\"child\">\n                                                                                        <div #childList=\"cdkDropList\"\n                                                                                            *ngIf=\"child.forms\"\n                                                                                            [cdkDropListData]=\"child.forms\"\n                                                                                            cdkDropList\n                                                                                            (cdkDropListDropped)=\"drop($event)\">\n                                                                                            <div class=\"\"\n                                                                                                *ngFor=\"let c2 of child.forms;let l=index\"\n                                                                                                [id]=\"c2.key\">\n                                                                                                <div cdkDrag>\n                                                                                                    <div\n                                                                                                        class=\"fields-content\">\n                                                                                                        <div\n                                                                                                            class=\"button-action child-3-background\">\n                                                                                                            <button\n                                                                                                                [disabled]=\"!field.deleteable\"\n                                                                                                                mat-mini-fab\n                                                                                                                color=\"warn\"\n                                                                                                                class=\"delete-field transparent-button\"\n                                                                                                                (click)=\"onRemoveField(i,j,k,l)\">\n                                                                                                                <mat-icon>\n                                                                                                                    delete\n                                                                                                                </mat-icon>\n                                                                                                            </button>\n                                                                                                        </div>\n                                                                                                        <div\n                                                                                                            class=\"fields-container\">\n                                                                                                            <lib-sub-category\n                                                                                                                [field]=\"c2\"\n                                                                                                                [length]=\"child?.forms?.length\"\n                                                                                                                [i]=\"k\"\n                                                                                                                [j]=\"l\"\n                                                                                                                (onAddKeywordFromInput)=\"addKeywordFromInput($event.event, $event.prev,i,j,k,l)\"\n                                                                                                                (onKeyPress)=\"onKeyPress($event.event,i,j,k,l)\"\n                                                                                                                (onAddNewField)=\"onAddNewField(i,j,k)\"\n                                                                                                                (onRemoveField)=\"onRemoveField(i,j,k,l)\"\n                                                                                                                (onChangeType)=\"onChangeType(c2.type,i,j,k,l)\"\n                                                                                                                (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k,l)\"\n                                                                                                                (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k,l)\"\n                                                                                                                (onExpendMore)=\"onExpendMore($event,i,j,k,l)\"\n                                                                                                                (onChangeLabel)=\"onChangeLabel($event,i,j,k,l)\"\n                                                                                                                (onCheckedChip)=\"onCheckedChip($event,i,j,k,l)\"\n                                                                                                                (onDrop)=\"drop($event)\"\n                                                                                                                (onCheckedDefault)=\"onCheckedDefault($event,i,j,k,l)\"\n                                                                                                                [conditionData]=\"conditionData\"\n                                                                                                                (onGetConditionValues)=\"getConditionValues()\">\n\n                                                                                                                <div\n                                                                                                                    class=\"child\">\n                                                                                                                </div>\n                                                                                                            </lib-sub-category>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                <div class=\"add-button-container add-button-sub-category\"\n                                                                                                    *ngIf=\"child?.forms?.length-1===l\">\n                                                                                                    <button\n                                                                                                        style=\"margin:10px auto\"\n                                                                                                        [disabled]=\"child?.forms?.length-1!==l\"\n                                                                                                        [style.opacity]=\"child?.forms?.length-1===l ? 1 :0\"\n                                                                                                        mat-raised-button\n                                                                                                        color=\"primary\"\n                                                                                                        (click)='onAddNewField(i,j,k)'>\n                                                                                                        <mat-icon>\n                                                                                                            add_box\n                                                                                                        </mat-icon>\n                                                                                                        <span>Ajouter un\n                                                                                                            champ</span>\n                                                                                                    </button>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </lib-sub-category>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"add-button-container add-button-sub-category\"\n                                                                        *ngIf=\"field?.forms?.length-1===k\">\n                                                                        <button style=\"margin:10px auto\"\n                                                                            [disabled]=\"field?.forms?.length-1!==k\"\n                                                                            [style.opacity]=\"field?.forms?.length-1===k ? 1 :0\"\n                                                                            mat-raised-button color=\"primary\"\n                                                                            (click)='onAddNewField(i,j)'>\n                                                                            <mat-icon>add_box</mat-icon>\n                                                                            <span>Ajouter un champ</span>\n                                                                        </button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </lib-sub-category>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"add-button-container add-button-sub-category\"\n                                            *ngIf=\"category?.forms?.length-1===j\">\n                                            <button style=\"margin:10px auto\" [disabled]=\"category?.forms?.length-1!==j\"\n                                                [style.opacity]=\"category?.forms?.length-1===j ? 1 :0\" mat-raised-button\n                                                color=\"primary\" (click)='onAddNewField(i)'>\n                                                <mat-icon>add_box</mat-icon>\n                                                <span>Ajouter un champ</span>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </ng-container>\n\n                            </div>\n                        </div>\n                        <button mat-mini-fab color=\"primary\" class=\"expand-button\"\n                            (click)=\"onExpendMore({event:$event, field:category},i)\">\n                            <mat-icon *ngIf=\"!category.expandMore\">chevron_right</mat-icon>\n                            <mat-icon *ngIf=\"category.expandMore\">expand_more</mat-icon>\n                        </button>\n                    </div>\n\n                    <div class=\"add-button-container\">\n                        <button (click)='onAddNewCategory($event)'>\n                            <mat-icon>add</mat-icon>\n                            Ajouter une catégorie\n                        </button>\n                        <!-- <button type=\"submit\">\n                            <mat-icon>check</mat-icon>\n                            Enregistrer\n                        </button> -->\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </form>\n</main>","import { Component, OnInit, ViewChild, ElementRef, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ENTER, COMMA, SEMICOLON } from \"@angular/cdk/keycodes\";\nimport { MatChipInputEvent } from \"@angular/material/chips\";\nimport { OnboardingService } from \"../onboarding.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UpdateProfilComponent } from '../components/update-profil/update-profil.component';\nimport { ExitConfirmComponent } from '../components/exit-confirm/exit-confirm.component';\n\n@Component({\n  selector: \"onboarding-create-profile-template\",\n  templateUrl: \"./template-profile-create.component.html\",\n  styleUrls: [\"./template-profile-create.component.scss\"],\n})\nexport class TemplateProfileCreateComponent implements OnInit {\n  form: FormGroup;\n  validCategory = false;\n  separatorKeysCodes = [ENTER, COMMA, SEMICOLON];\n  currentProfil: any = {};\n  canExit = true;\n  tags = [];\n  id = \"0\";\n  parent = [];\n  editIndex = null;\n  showProfileName = false;\n  matIconList = [\n    { name: 'developer_board' },\n    { name: 'contact_phone' },\n    { name: 'contact_mail' },\n    { name: 'play_circle_filled' },\n    { name: 'control_camera' },\n    { name: 'explicit' },\n    { name: 'person' },\n    { name: 'visibility' },\n    { name: 'video_label' },\n    { name: 'add_circle' },\n    { name: 'watch_later' },\n    { name: 'where_to_vote' },\n    { name: 'work' },\n    { name: 'web' },\n    { name: 'whatshot' },\n    { name: 'wifi' },\n    { name: 'workspaces' },\n    { name: 'wb_cloudy' },\n    { name: 'waves' },\n    { name: 'warning' },\n    { name: 'space_das' }\n  ];\n  isPictoListShow: boolean;\n  picto = \"\";\n  conditionData: any[];\n  categories=[]\n  constructor(\n    private fb: FormBuilder,\n    public service: OnboardingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private dialog: MatDialog\n  ) { }\n\n  defaultCategorie: any = [\n    {\n      name: \"Utilisateur\",\n      editable: false,\n      deleteable: false,\n      expandMore: false,\n      expandOnboarding:true,\n      defaultValue: false,\n      suffixEndpoint: \"category/user\",\n      forms: [\n        {\n          label: \"Civilité\",\n          key: \"Salutation\",\n          expandOnboarding:true,\n          defaultValue: [{ value: \"M.\", checked: false }, { value: \"Mme\", checked: false }],\n          value: null,\n          size: 10,\n          isMandatory: true,\n          otherValue:'',\n          type: \"select\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n\n          expandMore: false,\n        },\n        {\n          label: \"Type de profil\",\n          key: \"Type_de_profil_Nowboard__c\",\n          expandOnboarding:true,\n          defaultValue: [{ value: \"Manager\", checked: false }, { value: \"Utilisateur\", checked: false }],\n          value: null,\n          size: 10,\n          isMandatory: true,\n          otherValue:'',\n          type: \"select\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        {\n          label: \"Nom\",\n          key: \"LastName\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"text\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        {\n          label: \"Prénom\",\n          key: \"FirstName\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"text\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        {\n          label: \"Email\",\n          key: \"Email\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"email\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n\n        {\n          label: \"Téléphone fixe\",\n          key: \"Phone\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 20,\n          isMandatory: false,\n          otherValue:'',\n          type: \"tel\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n\n          expandMore: false,\n        },\n        {\n          label: \"Téléphone portable\",\n          key: \"MobilePhone\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 20,\n          isMandatory: false,\n          otherValue:'',\n          type: \"tel\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n\n          expandMore: false,\n        },\n        {\n          label: \"Fonction\",\n          key: \"Title\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"text\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        {\n          label: \"Etablissement / Site\",\n          key: \"AccountName\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"text\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        // {\n        //   label: \"ID\",\n        //   key: \"Id\",\n        //   expandOnboarding:true,\n        //   defaultValue: null,\n        //   value: null,\n        //   size: 80,\n        //   isMandatory: true,\n        //   otherValue:'',\n        //   type: \"text\",\n        //   editable: false,\n        //   deleteable: false,\n        //   subLevel: 1,\n        //   expandMore: false,\n        // }, {\n        //   label: \"Etablissement ID\",\n        //   key: \"AccountId\",\n        //   expandOnboarding:true,\n        //   defaultValue: null,\n        //   value: null,\n        //   size: 80,\n        //   isMandatory: true,\n        //   otherValue:'',\n        //   type: \"text\",\n        //   editable: false,\n        //   deleteable: false,\n        //   subLevel: 1,\n        //   expandMore: false,\n        // },\n        \n        {\n          label: \"Accès au portail\",\n          key: \"Acc_s_au_portail_client_NowBoard__c\",\n          expandOnboarding:true,\n          defaultValue: [{ value: \"Oui\", checked: false }, { value: \"Non\", checked: false }],\n          value: null,\n          size: 10,\n          isMandatory: true,\n          otherValue:'',\n          type: \"select\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n\n          expandMore: false,\n        },\n        {\n          label: \"Langue\",\n          key: \"Langue_maternelle__c\",\n          expandOnboarding:true,\n          defaultValue: [{ value: \"Français\", checked: false }, { value: \"Anglais\", checked: false }],\n          value: null,\n          size: 10,\n          isMandatory: true,\n          otherValue:'',\n          type: \"select\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n        {\n          label: \"A quitté la société\",\n          key: \"A_quitt_la_soci_t__c\",\n          expandOnboarding:true,\n          defaultValue: [{ value: \"Oui\", checked: false }, { value: \"Non\", checked: false }],\n          value: null,\n          size: 10,\n          isMandatory: true,\n          otherValue:'',\n          type: \"select\",\n          editable: false,\n          deleteable: false,\n          subLevel: 1,\n          expandMore: false,\n        },\n\n      ],\n    },\n    {\n      name: \"Session d'utilisateur\",\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      selected: true,\n      expandMore: false,\n      expandOnboarding:true,\n      defaultValue: false,\n      suffixEndpoint: \"category/user-session\",\n      forms: [\n        {\n          label: \"Utilisateur local à créer\",\n          key: \"UserLocalToCreate\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Login\",\n              key: \"Login\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: false,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Mot de passe\",\n              key: \"Password\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"password\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n        {\n          label: \"Utilisateur AD (serveur) à créer\",\n          key: \"UserServerToCreate\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Nom de domaine\",\n              key: \"DomainName\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: false,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Votre login\",\n              key: \"YourLogin\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Votre mot de passe.\",\n              key: \"YourPassword\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"password\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Groupe de sécurité\",\n              key: \"GroupSecurity\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"checkbox\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n              forms: [\n                {\n                  label: \"Utilisateur avec les droits similaires *\",\n                  key: \"UserWithSimilarAccess\",\n                  expandOnboarding:true,\n                  defaultValue: null,\n                  value: null,\n                  size: 80,\n                  isMandatory: true,\n                  otherValue:'',\n                  type: \"text\",\n                  editable: true,\n                  isConditional: false,\n                  conditionValue:\"\",\n                  conditionLocation:{},\n                  deleteable: true,\n                  subLevel: 3,\n                  expandMore: false,\n                },\n                {\n                  label: \"Descriptions\",\n                  key: \"Description\",\n                  expandOnboarding:true,\n                  defaultValue: null,\n                  value: null,\n                  size: 255,\n                  isMandatory: true,\n                  otherValue:'',\n                  type: \"textarea\",\n                  editable: true,\n                  isConditional: false,\n                  conditionValue:\"\",\n                  conditionLocation:{},\n                  deleteable: true,\n                  subLevel: 3,\n                  expandMore: false,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"Messagerie\",\n      expandMore: false,\n      suffixEndpoint: \"category/messagerie\",\n      selected: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      expandOnboarding:true,\n      defaultValue: false,\n      forms: [\n        {\n          label: \"Adresse mail à créer.\",\n          key: \"EmailToCreate\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Adresse mail\",\n              key: \"Email\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"email\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Type de licence (si gérées par le client)\",\n              key: \"SerialKey\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n        {\n          label: \"Listes  de distribution.\",\n          key: \"DistributionList\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Utilisateur avec les listes similaires *\",\n              key: \"UserWithSimilarList\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Descriptions.\",\n              key: \"Description\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"textarea\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n        {\n          label: \"Ajouter des boites mails délégués.\",\n          key: \"AddInboxMailDelegate\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Descriptions.\",\n              key: \"Description\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"textarea\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"Serveur\",\n      expandMore: false,\n      suffixEndpoint: \"category/serveur\",\n      selected: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      expandOnboarding:true,\n      defaultValue: false,\n      forms: [\n        {\n          label: \"Accès aux lecteurs réseaux.\",\n          key: \"ReadNetworkAccess\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Nom du serveur\",\n              key: \"ServerName\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: false,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Chemin du dossier\",\n              key: \"FolderPath\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Lettre à attribuer\",\n              key: \"AttributLetter\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"text\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"VPN\",\n      expandMore: false,\n      suffixEndpoint: \"category/vpn\",\n      selected: true,\n      expandOnboarding:true,\n      defaultValue: false,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      forms: [\n        {\n          label: \"Accès au VPN\",\n          key: \"VpnAccess\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n\n          expandMore: false,\n        },\n      ],\n    },\n    {\n      name: \"Imprimantes\",\n      expandMore: false,\n      suffixEndpoint: \"category/imprimente\",\n      selected: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      expandOnboarding:true,\n      defaultValue: false,\n      forms: [\n        {\n          label: \"Accès aux imprimantes.\",\n          key: \"PrinterAccess\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Nom / Modèle de l'imprimante / localisation\",\n              key: \"PrinterName\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"textarea\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"Applications\",\n      expandMore: false,\n      suffixEndpoint: \"category/application\",\n      selected: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      expandOnboarding:true,\n      defaultValue: false,\n      deleteable: true,\n      forms: [\n        {\n          label: \"Accès aux applications ?\",\n          key: \"ApplicationAccess\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"Descriptions\",\n              key: \"Description\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"textarea\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"Poste\",\n      expandMore: false,\n      suffixEndpoint: \"category/poste\",\n      selected: true,\n      expandOnboarding:true,\n      defaultValue: false,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      forms: [\n        {\n          label: \"Paramétrage de poste\",\n          key: \"PostParameter\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: false,\n          otherValue:'',\n          type: \"checkbox\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n          forms: [\n            {\n              label: \"RealocatedEquipment\",\n              key: \"\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 1000,\n              isMandatory: true,\n              otherValue:'',\n              type: \"textarea\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n            },\n            {\n              label: \"Nouveau poste\",\n              key: \"NewPost\",\n              expandOnboarding:true,\n              defaultValue: null,\n              value: null,\n              size: 80,\n              isMandatory: true,\n              otherValue:'',\n              type: \"checkbox\",\n              editable: true,\n              isConditional: false,\n              conditionValue:\"\",\n              conditionLocation:{},\n              deleteable: true,\n              subLevel: 2,\n              expandMore: false,\n              forms: [\n                {\n                  label: \"Acheté chez Nowteam\",\n                  key: \"PurchasedAtNowteam\",\n                  expandOnboarding:true,\n                  defaultValue: null,\n                  value: null,\n                  size: 1000,\n                  isMandatory: true,\n                  otherValue:'',\n                  type: \"textarea\",\n                  editable: true,\n                  isConditional: false,\n                  conditionValue:\"\",\n                  conditionLocation:{},\n                  deleteable: true,\n                  subLevel: 3,\n                  expandMore: false,\n                },\n                {\n                  label: \"Autre\",\n                  key: \"Other\",\n                  expandOnboarding:true,\n                  defaultValue: null,\n                  value: null,\n                  size: 1000,\n                  isMandatory: true,\n                  otherValue:'',\n                  type: \"text\",\n                  editable: true,\n                  isConditional: false,\n                  conditionValue:\"\",\n                  conditionLocation:{},\n                  deleteable: true,\n                  subLevel: 3,\n                  expandMore: false,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"Autres\",\n      expandMore: false,\n      suffixEndpoint: \"category/autres\",\n      selected: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      expandOnboarding:true,\n      defaultValue: false,\n      deleteable: true,\n      forms: [\n        {\n          label: \"Descriptions\",\n          key: \"Description\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 1000,\n          isMandatory: false,\n          otherValue:'',\n          type: \"textarea\",\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n          deleteable: true,\n          subLevel: 1,\n          expandMore: false,\n        },\n      ],\n    },\n  ];\n\n  canDeactivate() {\n    if (!this.canExit) {\n      this.dialog.open(ExitConfirmComponent, {\n        data: ''\n      })\n      return this.service.canExit$\n    }\n    return true\n  }\n\n  async ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    this.form = this.fb.group({\n      Name: [\"\", Validators.required],\n      Picto: [\"\"],\n      Description: [\"\"],\n      Tags: [\"\", Validators.required],\n      Status: [false, Validators.required],\n    });\n    this.form.valueChanges.subscribe(c => {\n      this.canExit = false;\n    });\n    if (this.id !== \"0\") {\n      this.currentProfil = await this.service.getProfil(this.id);\n      this.form.patchValue(this.currentProfil);\n      this.categories = this.currentProfil.categories;\n    } else {\n      this.showProfileName = true;\n      this.categories=this.defaultCategorie\n    }\n    this.tags = await this.service.getAllTags();\n  }\n\n  onAddNewCategory(e) {\n    e.preventDefault();\n    this.canExit = false;\n    this.categories.push({\n      name: \"\",\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      deleteable: true,\n      expandMore: true,\n      suffixEndpoint: \"\",\n      forms: [\n        {\n          label: \"\",\n          key: \"\",\n          expandOnboarding:true,\n          defaultValue: null,\n          value: null,\n          size: 80,\n          isMandatory: true,\n          otherValue:'',\n          type: \"text\",\n          deleteable: true,\n          editable: true,\n          isConditional: false,\n          conditionValue:\"\",\n          conditionLocation:{},\n        },\n      ],\n    });\n  }\n\n  onAddNewField(...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 1 ? this.categories[params[0]].forms : length === 2 ? this.categories[params[0]].forms[params[1]].forms : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;\n    forms.push({\n      label: \"\",\n      key: \"\",\n      expandOnboarding:true,\n      defaultValue: null,\n      value: null,\n      size: 80,\n      isMandatory: true,\n      otherValue:'',\n      type: \"text\",\n      deleteable: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      subLevel: params.length,\n    });\n  }\n\n  onAddNewSubLevelField(...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    forms.expandMore = true;\n    forms.forms = [];\n    forms.forms.push({\n      label: \"\",\n      key: \"\",\n      expandOnboarding:true,\n      defaultValue: null,\n      value: null,\n      size: 80,\n      isMandatory: true,\n      otherValue:'',\n      type: \"text\",\n      deleteable: true,\n      editable: true,\n      isConditional: false,\n      conditionValue:\"\",\n      conditionLocation:{},\n      subLevel: params.length,\n      expandMore: true,\n    });\n  }\n\n  onRemoveField(...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms : length === 3 ? this.categories[params[0]].forms[params[1]].forms : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;\n    forms.splice(params[length - 1], 1);\n  }\n\n  onRemoveCategory(e, i) {\n    e.preventDefault();\n    this.categories.splice(i, 1);\n    this.canExit = false;\n  }\n\n  onChangeCategory() {\n    return this.categories.every((cat) => cat.name !== \"\" && cat.forms.every((field) => field.label !== \"\" && field.type !== \"\"));\n  }\n\n  async onSubmit() {\n    if (this.form.valid && this.onChangeCategory()) {\n      const expandCategories=\n      this.categories\n      .filter((cat)=>cat.expandOnboarding)\n      .map((cat)=>{\n        if(cat.forms){\n          const f= cat.forms\n          .filter((form)=>form.expandOnboarding)\n          .map((sub)=>{\n            if(sub.forms){\n              const s=sub.forms.filter((child)=>{\n                if(child.forms){\n                   const c=child.forms.filter((ch)=>ch.expandOnboarding)\n                   return {\n                     ...child,\n                     forms:c\n                   }\n                }\n                return child;\n              });\n              return {\n                ...sub,\n                forms:s\n              }\n            }\n            return sub;\n          })\n          return {\n            ...cat,\n            forms:f\n          }\n        }\n        return cat\n      })\n      \n      const result =\n        this.id !== \"0\"\n          ? await this.service.updateProfil({\n            ...this.currentProfil,\n            ...this.form.value,\n            categories: expandCategories,\n          })\n          : await this.service.createProfil({\n            ...this.form.value,\n            categories: expandCategories,\n          });\n      if (result) {\n        await this.service.getAllProfil();\n        this.canExit = true;\n        this.router.navigate([this.service.mainPath]);\n      } else {\n        console.log(\"errror......\");\n      }\n    }\n  }\n\n  onChangeType(type: string, ...params) {\n\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms : length === 3 ? this.categories[params[0]].forms[params[1]].forms : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;\n    if (type === \"select\" || type === \"radio\" || type === \"checkbox_multiple\") {\n      forms[params[length - 1]].defaultValue = [];\n    } else if (type === \"checkbox\") {\n      forms[params[length - 1]].defaultValue = true;\n    } else {\n      forms[params[length - 1]].defaultValue = \"\";\n    }\n  }\n\n  onKeyPress(event: any, ...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    if (event.key === \";\") {\n      const exist = forms.defaultValue.find((opt) => opt.value.toLocaleLowerCase() === event.target.value.split(\";\")[0].toLocaleLowerCase());\n      if (!exist) {\n        forms.defaultValue.push({\n          value: event.target.value.split(\";\")[0],\n          checked: false\n        });\n        event.target.value = \"\";\n      } else {\n        event.target.value = \"\";\n      }\n    }\n    // this.getConditionValues()\n  }\n\n  removeKeyword(keyword: any, ...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    forms.defaultValue = forms.defaultValue.filter((option) => option.value !== keyword.value);\n    // this.getConditionValues()\n  }\n\n  onExpendMore(event, ...params) {\n    if (event) {\n      if (event.event) {\n        event.event.preventDefault();\n      }\n      if (event.field && !event.field.expandMore) {\n        for (let i = 0; i < this.categories.length; i++) {\n          this.categories[i].expandMore = false;\n          if (this.categories[i].forms) {\n            for (let j = 0; j < this.categories[i].forms.length; j++) {\n              this.categories[i].forms[j].expandMore = false;\n            }\n          }\n        }\n      }\n\n    }\n    if (params.length === 1) {\n      this.categories[params[0]].expandMore = !this.categories[params[0]].expandMore;\n    } else if (params.length === 2) {\n      if (this.categories[params[0]].forms[params[1]].expandMore) {\n        this.categories[params[0]].forms[params[1]].expandMore = false;\n      } else {\n        this.categories[params[0]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].expandMore = true;\n      }\n    } else if (params.length === 3) {\n      if (this.categories[params[0]].forms[params[1]].forms[params[2]].expandMore) {\n        this.categories[params[0]].forms[params[1]].forms[params[2]].expandMore = false;\n      } else {\n        this.categories[params[0]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].expandMore = true;\n      }\n    } else {\n      if (this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].expandMore) {\n        this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].expandMore = false;\n      } else {\n        this.categories[params[0]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].expandMore = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].expandMore = true;\n      }\n    }\n  }\n\n  onCheckedDefault(event, ...params) {\n    if (params.length === 1) {\n      this.categories[params[0]].defaultValue = event;\n    } else if (params.length === 2) {\n      this.categories[params[0]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].defaultValue = event;\n    } else if (params.length === 3) {\n      this.categories[params[0]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue = event;\n    } else {\n      this.categories[params[0]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue = event;\n      this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].defaultValue = event;\n    }\n    // this.getConditionValues()\n  }\n\n  addKeywordFromInput(event: MatChipInputEvent, prev, ...params) {\n    this.canExit = false;\n    const input = event.input;\n    const value = event.value;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    if (value) {\n      const prevIndex = forms.defaultValue.findIndex((opt) => opt.value.toLocaleLowerCase() === prev.toLocaleLowerCase());\n      if (prevIndex !== -1) {\n        forms.defaultValue[prevIndex].value = value.trim();\n        input.value = \"\";\n      } else {\n        const exist = forms.defaultValue.find((opt) => opt.value.toLocaleLowerCase() === event.value.toLocaleLowerCase());\n        if (!exist) {\n          forms.defaultValue.push({ value: value.trim(), checked: false });\n          input.value = \"\";\n        } else {\n          input.value = \"\";\n        }\n      }\n\n    }\n    // this.getConditionValues()\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    this.canExit = false;\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n\n  ingoreDefaultAction(e) {\n    e.preventDefault();\n  }\n\n  onShowCategory() {\n    this.showProfileName = !this.showProfileName;\n  }\n\n  onSelectPicto(e, picto) {\n    e.preventDefault();\n    this.canExit = false;\n    this.form.patchValue({ Picto: picto });\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n  onShowPictoList(e) {\n    e.preventDefault();\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n  onChangeLabel(event: any, ...params) {\n    const arr = event.label.split(\" \");\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    forms.key = arr.join('')\n\n  }\n  onCheckedChip(event: any, ...params) {\n    this.canExit = false;\n    const length = params.length;\n    const forms = length === 2 ? this.categories[params[0]].forms[params[length - 1]] : length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];\n    const index = forms.defaultValue.findIndex((chip) => chip.value === event.value)\n    if (index !== -1 && forms.type === 'checkbox_multiple') {\n      forms.defaultValue[index].checked = !event.checked\n    } else if (index !== -1) {\n      forms.defaultValue.forEach((value) => {\n        value.checked = false;\n      })\n      forms.defaultValue[index].checked = !event.checked\n    }\n    // this.getConditionValues()\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(UpdateProfilComponent, {\n      data: {\n        matIconList: this.matIconList,\n        form: this.form,\n        tags: this.tags\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n\n      }\n    });\n  }\n\n  onPassInEditMode(i) {\n    this.canExit = false;\n    this.editIndex = i;\n  }\n\n  onEdit() {\n    this.editIndex = null;\n  }\n\n  onEditCategoryName(i, name) {\n    this.canExit = false;\n    this.categories[i].name = name;\n    // this.getConditionValues()\n  }\n  onAcrelink(e) {\n    e.preventDefault();\n  }\n  \n  getConditionValues() {\n    const conditionsList = [];\n    const type=(forms)=>forms.type === 'select' || forms.type === 'checkobx' || forms.type === 'checkbox_multiple' || forms.type === 'radio'\n    for (let i = 0; i < this.categories.length; i++) {\n      for (let j = 0; j < this.categories[i].forms.length; j++) {\n        const forms = this.categories[i].forms[j];\n        if (type(forms)) {\n          conditionsList.push({\n            level: 1,\n            categoryIndex: i,\n            currentIndex: j,\n            possibleValues: forms.defaultValue,\n            label: `${this.categories[i].name} > ${forms.label}`\n          })\n        }\n        if(forms.forms){\n          for (let k = 0; k < forms.forms.length; k++) {\n            const sub=forms.forms[k]                    \n           if(sub.type==='checkbox' || sub.type==='select' || sub.type==='radio' || sub.type==='checkbox_multiple'){           \n            conditionsList.push({\n                   level:2,\n                   categoryIndex:i,\n                   formIndex:j,\n                   currentIndex:k,\n                   possibleValues:sub.defaultValue,\n                   label:`${this.categories[i].name} > ${forms.label} > ${sub.label}`\n            })          \n           }  \n           if(sub.forms){\n            for (let l = 0; l < sub.forms.length; l++) {\n              const child=sub.forms[l]\n              if(child.type==='checkbox' || child.type==='select' || child.type==='radio' || child.type==='checkbox_multiple'){           \n                conditionsList.push({\n                       level:3,\n                       categoryIndex:i,\n                       formIndex:j,\n                       subIndex:l,\n                       currentIndex:k,\n                       possibleValues:child.defaultValue,\n                       label:`${this.categories[i].name} > ${forms.label} > ${sub.label} >  ${child.label}`\n                })          \n               }\n              \n            }\n          }        \n          }\n        }\n      }\n\n    }\n    console.log('----------------------', conditionsList);\n    this.conditionData=conditionsList\n    console.log(conditionsList);\n\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n    selector: '[appMaterialElevation]'\n})\nexport class MaterialElevationDirective implements OnChanges {\n\n    @Input()\n    defaultElevation = 2;\n\n    @Input()\n    raisedElevation = 8;\n\n    constructor(\n        private element: ElementRef,\n        private renderer: Renderer2\n    ) {\n        this.setElevation(this.defaultElevation);\n    }\n\n    ngOnChanges(_changes: SimpleChanges) {\n        this.setElevation(this.defaultElevation);\n    }\n\n    @HostListener('mouseenter')\n    onMouseEnter() {\n        this.setElevation(this.raisedElevation);\n    }\n\n    @HostListener('mouseleave')\n    onMouseLeave() {\n        this.setElevation(this.defaultElevation);\n    }\n\n    setElevation(amount: number) {\n        // remove all elevation classes\n        const classesToRemove = Array.from((<HTMLElement>this.element.nativeElement).classList).filter(c => c.startsWith('mat-elevation-z'));\n        classesToRemove.forEach((c) => {\n            this.renderer.removeClass(this.element.nativeElement, c);\n        });\n\n        // add the given elevation class\n        const newClass = `mat-elevation-z${amount}`;\n        this.renderer.addClass(this.element.nativeElement, newClass);\n    }\n}\n","<div class=\"main\">\n    <div class=\"header-list\">\n        <h3 class=\"title\">Profils</h3>\n        <p class=\"sub-title\">Retrouvez ici, l’ensemble des profils d’onboarding que vous avez créés</p>\n    </div>\n    <div class=\"content-list\">\n\n        <div class=\"list\">\n            <div class=\"box-template new-template\">\n                <p>Nouveau profil</p>\n                <a role=\"button\" class=\"add-profil\" [routerLink]=\"[this.service.mainPath+'/template-builder/0']\"\n                    mat-raised-button color=\"primary\">\n                    Créer un nouveau profil\n                </a>\n            </div>\n            <div appMaterialElevation [defaultElevation]=\"0\" raisedElevation=\"1\" class=\"box-template\"\n                *ngFor=\"let d of datas\">\n                <div class=\"box-content\" [routerLink]=\"[this.service.mainPath+'/template-builder/'+d._id]\">\n                    <div *ngIf=\"d?.Picto\" class=\"picto-preview\">\n                        <mat-icon style=\"font-size:50px ;    width: 43%;\n                        height: 40%;\">{{d?.Picto}}</mat-icon>\n                    </div>\n                    <div *ngIf=\"!d?.Picto\" class=\"picto-preview\">\n                        <h3>{{d.Name.substr(0,2)}}</h3>\n                    </div>\n                    <p> {{d.Name}}</p>\n                </div>\n                <button (click)=\"onDelete($event,d._id)\" mat-mini-fab color=\"accent\" appMaterialElevation\n                    [defaultElevation]=\"defaultElevation\" raisedElevation=\"16\">\n                    <mat-icon>close</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { OnboardingService } from '../onboarding.service';\n\n@Component({\n  selector: 'onboarding-profile-list',\n  templateUrl: './template-profile-list.component.html',\n  styleUrls: ['./template-profile-list.component.scss']\n})\nexport class TemplateProfileListComponent implements OnInit {\n  displayedColumns = ['Name', 'vcontacts', 'createdAt', 'updatedAt', 'action'];\n  datas: any = [];\n  dataSource = new MatTableDataSource<any>([]);\n  defaultElevation = 2;\n  raisedElevation = 8;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(public service: OnboardingService, private router: Router) {\n    this.service.templates.subscribe((templates:any)=>{\n      if(templates && templates.length>0){\n        this.datas=templates\n      }\n    })\n   }\n\n  async ngOnInit() {\n    setTimeout(async () => {\n      await this.getAllProfils(true)\n    },500);\n  }\n\n  onAddProfil() {\n    this.router.navigate(['onboarding/template-builder/0'])\n  }\n\n  async onDelete(e, id) {\n    e.stopPropagation()\n    if (confirm('Voulez vous supprimer cette template ?')) {\n      const result = await this.service.deleteProfil(id);\n      if (result) {\n        this.datas=this.datas.filter((data:any)=>data._id!==id)\n     }\n    }\n  }\n\n  async getAllProfils(recall) {\n    if(this.datas.length===0){\n      const profile = await this.service.getAllProfil();\n      this.datas = profile\n    }\n    this.dataSource = new MatTableDataSource<any>(this.datas);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate, \n           route: ActivatedRouteSnapshot, \n           state: RouterStateSnapshot) {\n\n     //let url: string = state.url;\n\n     return component.canDeactivate ? component.canDeactivate() : true;\n  }\n} ","<div class=\"field-item\">\n    <ng-container [ngSwitch]=\"field.type\">\n        <div *ngSwitchCase=\"'checkbox'\" class=\"flex-auto w-30 field-size\">\n            <div *ngSwitchCase=\"'checkbox'\" class=\"flex-auto w-30 field-size\">\n                <mat-checkbox class=\"form-field\" [class]=\"checkSubForm(field) ? 'checkbox-title-active':''\"\n                    [(ngModel)]=\"field.value\" [required]=\"field.isMandatory\" [ngModelOptions]=\"{standalone: true}\">\n                    {{field.label}}\n                </mat-checkbox>\n            </div>\n        </div>\n        <div *ngSwitchCase=\"'checkbox_multiple'\" class=\"flex-auto w-30 field-size\">\n            <label>{{field.label}}</label>\n            <div style=\"margin-top: 20px;\">\n                <mat-checkbox class=\"form-field\" style=\"display: block; margin-bottom: 5px; margin-top: 10px\" *ngFor=\"let opt of field.defaultValue\" [checked]=\"opt.checked\"\n                    [(ngModel)]=\"opt.checked\" [required]=\"field.isMandatory\" [ngModelOptions]=\"{standalone: true}\">\n                    {{opt.value}}\n                </mat-checkbox>\n            </div>\n        </div>\n        <div *ngSwitchCase=\"'radio'\" class=\"flex-auto w-30 field-size\">\n            <label style=\"display: block;\"> {{field.label}} </label>\n            <mat-radio-group class=\"form-field radio-group field-size\" [(ngModel)]=\"field.value\"\n                [required]=\"field.isMandatory\" aria-label=\"Select an option\">\n                <mat-radio-button *ngFor=\"let opt of field.defaultValue\" [value]=\"opt.value\">{{opt.value}}\n                </mat-radio-button>\n            </mat-radio-group>\n            <mat-form-field *ngIf=\"'autre'===formatOther(field.value)\" class=\"form-field field-size other-option\"\n                appearance=\"outline\">\n                <mat-label>Autre option</mat-label>\n                <input type=\"text\" [required]=\"field.isMandatory\" matInput [ngModelOptions]=\"{standalone: true}\"\n                    [(ngModel)]=\"field.otherValue\" placeholder=\"\">\n            </mat-form-field>\n        </div>\n        <div *ngSwitchCase=\"'select'\" class=\"flex-auto w-30 field-size\">\n            <mat-form-field class=\"flex-auto w-30 field-size\" appearance=\"outline\">\n                <mat-label> {{field.label}} </mat-label>\n                <mat-select [(ngModel)]=\"field.value\" [ngModelOptions]=\"{standalone: true}\"\n                    [required]=\"field.isMandatory\">\n                    <mat-option *ngFor=\"let opt of field.defaultValue\" [value]=\"opt.value\">{{opt.value}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngIf=\"'autre'===formatOther(field.value)\" class=\"form-field field-size other-option\"\n                appearance=\"outline\">\n                <mat-label>Autre option</mat-label>\n                <input type=\"text\" [required]=\"field.isMandatory\" matInput [ngModelOptions]=\"{standalone: true}\"\n                    [(ngModel)]=\"field.otherValue\" placeholder=\"\">\n            </mat-form-field>\n        </div>\n        <mat-form-field *ngSwitchCase=\"'textarea'\" class=\"form-field full-width\" appearance=\"outline\">\n            <mat-label>{{field.label}}</mat-label>\n            <textarea type=\"text\" rows=\"5\" matInput [required]=\"field.isMandatory\" [ngModelOptions]=\"{standalone: true}\"\n                [(ngModel)]=\"field.value\" placeholder=\"Description...\"></textarea>\n        </mat-form-field>\n\n        <mat-form-field *ngSwitchDefault class=\"form-field field-size\" appearance=\"outline\">\n            <mat-label>{{field.label}}</mat-label>\n            <input [type]=\"field.type\" [required]=\"field.isMandatory\" matInput [ngModelOptions]=\"{standalone: true}\"\n                [(ngModel)]=\"field.value\" placeholder=\"\">\n        </mat-form-field>\n    </ng-container>\n</div>\n<ng-content select=\".child\"></ng-content>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ENTER, COMMA, SEMICOLON } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'lib-sub-create-onboarding',\n  templateUrl: './sub-onboarding-create.component.html',\n  styleUrls: ['./sub-onboarding-create.component.scss']\n})\nexport class SubOnboardingCreateComponent implements OnInit {\n  @Input() field: any\n  @Input() length: any\n  @Input() i: any\n  @Input() j: any\n  @Output() onAddKeywordFromInput = new EventEmitter<any>()\n  @Output() onKeyPress = new EventEmitter<any>()\n  @Output() onDrop = new EventEmitter<any>()\n  @Output() onAddNewField = new EventEmitter<any>()\n  @Output() onRemoveField = new EventEmitter<any>()\n  @Output() onChangeType = new EventEmitter<any>()\n  @Output() onRemoveKeyword = new EventEmitter<any>()\n  @Output() onAddNewSubLevelField = new EventEmitter<any>()\n  @Output() onExpendMore = new EventEmitter<any>()\n  @Output() onChangeLabel = new EventEmitter<any>()\n  @Output() onCheckedChip = new EventEmitter<any>()\n\n  chipControl = new FormControl(new Set());\n\n  separatorKeysCodes = [ENTER, COMMA, SEMICOLON];\n  currentChip=\"\"\n  prevValue=\"\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  drop(event) {\n    this.onDrop.emit(event)\n  }\n\n  addKeywordFromInput(event, i, j) {\n    this.onAddKeywordFromInput.emit({ event,prev:this.prevValue, i, j });\n  }\n\n  keyUp(event, i, j) {\n    this.onKeyPress.emit({ event, i, j })\n  }\n\n  addNewField(event, i) {\n    event.preventDefault()\n    this.onAddNewField.emit({ event, i })\n  }\n\n  removeField(event, i, j) {\n    event.preventDefault()\n    this.onRemoveField.emit({ i, j })\n  }\n\n  changeType(type, i, j) {\n    this.onChangeType.emit({ type, i, j })\n  }\n\n  removeKeyword(event, i, j) {\n    this.onRemoveKeyword.emit({ event, i, j })\n  }\n  addNewSubLevelField(e) {\n    e.preventDefault()\n    this.onAddNewSubLevelField.emit(true)\n  }\n  expendMore(e, field) {\n    e.preventDefault()\n    this.onExpendMore.emit({expand:true, field})\n  }\n\n  ingoreDefaultAction(e) {\n    e.preventDefault()\n  }\n\n  changeLabel(label,key){\n    this.onChangeLabel.emit({label, key})\n  }\n\n  toggleChip = (chip: any) => {\n    this.onCheckedChip.emit(chip)\n    // const addChip = () => { this.chips.add(chip); };\n    // const removeChip = () => { this.chips.delete(chip); };\n    // this.chips.has(chip) ? removeChip() : addChip();\n\n  }\n\n  onEditChip(chip){\n    if(chip.value===this.currentChip){\n      this.currentChip=\"\"\n      this.prevValue=\"\"\n    }else{\n      this.currentChip=chip.value;\n      this.prevValue=chip.value\n    }\n  }\n\n  get chips() { return this.chipControl.value; }\n\n  formatOther(other:string){\n   if(other){\n    return other.toLocaleLowerCase()\n   }\n   return ''\n  }\n\n\n  checkSubForm(forms){\n    let hasSubForm=false;\n    if(forms.forms && forms.forms.length){\n      hasSubForm=true;\n    }    \n    return hasSubForm\n  }\n\n}\n","<main>\n    <div class=\"content\">\n        <form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n            <div class=\"select-contact\" *ngIf=\"!isSelected\">\n                <h3>\n                    Onboarding de votre nouveau collaborateur\n                </h3>\n                <p>Sélectionnez le nom de votre profil afin de pouvoir démarrer son onboarding.</p>\n                <div class=\"select-template\">\n                    <mat-form-field class=\"full-width\" appearance=\"outline\">\n                        <mat-label>Profil</mat-label>\n                        <mat-select formControlName=\"TemplateId\" required (selectionChange)=\"onSelect($event.value)\">\n                            <mat-option *ngFor=\"let template of templates\" [value]=\"template._id\">{{template.Name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button [style.opacity]=\"form.get('TemplateId')?.value=='' ? 0.4 : 1\"\n                        [disabled]=\"form.get('TemplateId')?.value==''\" mat-raised-button color=\"primary\"\n                        (click)='onSelectContactTemplate()'>\n                        {{id !== \"0\" ? 'Modifier l’onboarding' :'Démarrer l’onboarding'}}\n                    </button>\n                </div>\n            </div>\n            <div class=\"category\" *ngIf=\"isSelected\">\n                <!-- <div class=\"category\"> -->\n\n                <div class=\"side-bar\">\n                    <div class=\"summary\">\n                        <h3 class=\"template-title\">\n                            {{currentTemplate?.Name}}\n                        </h3>\n                        <ol>\n                            <li class=\"li-title\" *ngFor=\"let cat of categories;  let i=index\"\n                                [class]=\"selectedMenu===i ?'active':''\" (click)=\"onSelectMenu(i)\">\n                                <span>\n                                    <span [ngxScrollTo]=\"'#'+cat.name\">{{cat.name}}</span>\n                                    <mat-icon *ngIf=\"checkSubForm(cat.forms)\">keyboard_arrow_right</mat-icon>\n                                </span>\n                            </li>\n                        </ol>\n                    </div>\n                    <button mat-button class=\"register-button\" type=\"submit\">\n                        <!-- <mat-icon>check</mat-icon> -->\n                        Soumettre ma fiche de poste\n                    </button>\n                </div>\n                <div class=\"fields\">\n                    <div class=\"example-list mt-20\">\n                        <div class=\"category-item\" *ngFor=\"let category of categories;  let i=index\"\n                            [id]=\"category.name\">\n\n                            <div class=\"field-content\">\n                                <div class=\"field-item\">\n                                    <h4 class=\"category-name\">{{category.name}}</h4>\n                                </div>\n                                <div class=\"category-container\">\n                                    <ng-container>\n                                        <div class=\"field-category\" *ngFor=\"let field of category.forms;let j=index\"\n                                            [id]=\"field.key\">\n                                            <div class=\"inner-loop\"\n                                                *ngIf=\"field.expandOnboarding && onCheckConditionLocationValue(field.isConditional,field.conditionLocation,field.conditionValue)\">\n                                                <div class=\"fields-content\">\n\n                                                    <div class=\"fields-container\">\n                                                        <lib-sub-create-onboarding [field]=\"field\"\n                                                            [length]=\"category?.forms?.length\" [i]=\"i\" [j]=\"j\"\n                                                            (onDrop)=\"drop($event)\">\n                                                            <div class=\"child\">\n                                                                <div class=\"inner-child\" *ngIf=\"field.forms\">\n                                                                    <div class=\"inner-child-content\"\n                                                                        *ngFor=\"let child of field.forms;let k=index\"\n                                                                        [id]=\"child.key\">\n                                                                        <div class=\"inner-loop\"\n                                                                            *ngIf=\"child.expandOnboarding && onCheckConditionLocationValue(child.isConditional,child.conditionLocation,child.conditionValue)\">\n                                                                            <div class=\"fields-content\">\n\n                                                                                <div class=\"fields-container\">\n                                                                                    <lib-sub-create-onboarding\n                                                                                        [field]=\"child\"\n                                                                                        [length]=\"field?.forms?.length\"\n                                                                                        [i]=\"j\" [j]=\"k\"\n                                                                                        (onDrop)=\"drop($event)\">\n                                                                                        <div class=\"child\">\n                                                                                            <div class=\"inner-child\"\n                                                                                                *ngIf=\"child.forms\">\n                                                                                                <div class=\"inner-child-content\"\n                                                                                                    *ngFor=\"let c2 of child.forms;let l=index\"\n                                                                                                    [id]=\"c2.key\">\n                                                                                                    <div class=\"inner-loop\"\n                                                                                                        *ngIf=\"c2.expandOnboarding && onCheckConditionLocationValue(c2.isConditional,c2.conditionLocation,c2.conditionValue)\">\n                                                                                                        <div\n                                                                                                            class=\"fields-content\">\n                                                                                                            <div\n                                                                                                                class=\"fields-container\">\n                                                                                                                <lib-sub-create-onboarding\n                                                                                                                    [field]=\"c2\"\n                                                                                                                    [length]=\"child?.forms?.length\"\n                                                                                                                    [i]=\"k\"\n                                                                                                                    [j]=\"l\"\n                                                                                                                    (onDrop)=\"drop($event)\">\n                                                                                                                    <div\n                                                                                                                        class=\"child\">\n                                                                                                                    </div>\n                                                                                                                </lib-sub-create-onboarding>\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </lib-sub-create-onboarding>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </lib-sub-create-onboarding>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </form>\n    </div>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { OnboardingService } from \"../onboarding.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UpdateProfilComponent } from '../components/update-profil/update-profil.component';\nimport { ExitConfirmComponent } from '../components/exit-confirm/exit-confirm.component';\n\n@Component({\n  selector: \"create-onboarding\",\n  templateUrl: \"./onboarding-create.component.html\",\n  styleUrls: [\"./onboarding-create.component.scss\"],\n})\nexport class OnboardingCreateComponent implements OnInit {\n  form: FormGroup;\n  currentProfil: any = {};\n  canExit=true;\n  tags = [];\n  id = \"0\";\n  parent = [];\n  editIndex=null;\n  showProfileName = false;\n  selectedMenu=0;\n  templates: any;\n  contacts: any;\n  matIconList = [\n    { name: 'developer_board' },\n    { name: 'contact_phone' },\n    { name: 'contact_mail' },\n    { name: 'play_circle_filled' },\n    { name: 'control_camera' },\n    { name: 'explicit' },\n    { name: 'person' },\n    { name: 'visibility' },\n    { name: 'video_label' },\n    { name: 'add_circle' },\n    { name: 'watch_later' },\n    { name: 'where_to_vote' },\n    { name: 'work' },\n    { name: 'web' },\n    { name: 'whatshot' },\n    { name: 'wifi' },\n    { name: 'workspaces' },\n    { name: 'wb_cloudy' },\n    { name: 'waves' },\n    { name: 'warning' },\n    { name: 'space_das' }\n  ];\n  isPictoListShow: boolean;\n  picto = \"\";\n  currentOnboarding: any;\n  currentTemplate:any\n  isSelected: boolean;\n  currentUser: any;\n  currentActive: any;\n  constructor(\n    private fb: FormBuilder, \n    public service: OnboardingService, \n    private route: ActivatedRoute, \n    private router: Router,\n    private dialog: MatDialog\n    ) { }\n  \n  categories: any\n\n  canDeactivate(){\n    if(!this.canExit){\n      this.dialog.open(ExitConfirmComponent,{\n        data:''\n      })\n      return this.service.canExit$\n    }\n    return true    \n  }\n  \n  async ngOnInit() {\n\n    this.onCreateDynamicForm();\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n\n    setTimeout(async () => {\n      await this.service.getAllProfil();      \n    }, 500);\n\n    this.service._templates.subscribe((data) => {\n      this.templates = data;\n    });\n    this.id = this.route.snapshot.paramMap.get(\"id\");\n    if (this.id !== \"0\") {\n      setTimeout(async () => {\n        this.currentOnboarding = await this.service.getOnboarding(this.id);\n        this.form.patchValue(this.currentOnboarding)\n        this.categories=this.currentOnboarding.categories;\n        this.currentTemplate=this.currentOnboarding?.vtemplates[0]\n        //this.onSelectContactTemplate()\n      }, 500);\n    }\n  }\n\n  onCreateDynamicForm() {\n    this.form = this.fb.group({\n      TemplateId: [0, Validators.required]\n    });\n  }\n\n  onSelectContactTemplate() {\n    this.isSelected = true;\n  }\n\n\n  onSelect(id) {\n    this.currentTemplate= this.templates.find((t) => t._id === id);\n    this.categories =this.currentTemplate.categories\n  }\n\n  existSubForm(forms){\n    let exist=false;\n    if(forms){\n      for (const sub of forms) {\n        if(sub.forms){\n          exist=true;\n        }\n      }\n    }\n    return exist\n  }\n\n  onChangeCategory() {\n    const checkMandatory=(field)=> !!field.value && field.isMandatory && field.type!==\"checkbox_multiple\"  || field.isConditional  || !field.isMandatory || field.type===\"checkbox_multiple\"\n    return this.categories.every((cat) => cat.forms.every((field) => { \n      if(field.forms){\n         return field.forms.every((form)=>{\n           if(form.forms){\n              return form.forms.every((child)=>{\n                  return checkMandatory(child)\n              })\n           }\n           return checkMandatory(form)\n         })\n      }\n      return checkMandatory(field)\n    }));\n  }\n\n\n  async onSubmit() {\n    console.log(this.categories);\n    \n    if (this.form.valid && this.onChangeCategory()) { \n      const result =\n        this.id !== \"0\"\n          ? await this.service.updateOnboarding({\n            ...this.form.value,\n            categories: this.categories,\n            _id:this.id\n          })\n          : await this.service.createOnboarding({\n            ...this.form.value,\n            categories: this.categories\n          });\n      if (result) {\n        await this.service.getAllProfil();\n        this.canExit=true; \n        console.log(this.service.mainPath+'/onboarding');\n        //this.router.navigate([this.service.mainPath+'/onboarding']);\n      } else {\n        console.log(\"errror......\");\n      }\n    }\n  }\n\n\n  onExpendMore(event, ...params) {\n    if (event) {\n      if (event.event) {\n        event.event.preventDefault();\n      }\n      // if (event.field && !event.field.expandMore) {\n      //   for (let i = 0; i < this.categories.length; i++) {\n      //     this.categories[i].expandMore = false;\n      //     if (this.categories[i].forms) {\n      //       for (let j = 0; j < this.categories[i].forms.length; j++) {\n      //         this.categories[i].forms[j].expandMore = false;\n      //       }\n      //     }\n      //   }\n      // }\n\n    }\n    if (params.length === 1) {\n      this.categories[params[0]].defaultValue = !this.categories[params[0]].defaultValue;\n    } else if (params.length === 2) {\n      this.currentActive=String(params[0]) + String(params[1])\n      if (this.categories[params[0]].forms[params[1]].defaultValue) {\n        this.categories[params[0]].forms[params[1]].defaultValue = false;\n      } else {\n        this.categories[params[0]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].defaultValue = true;\n      }\n    } else if (params.length === 3) {\n      if (this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue) {\n        this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue = false;\n      } else {\n        this.categories[params[0]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue = true;\n      }\n    } else {\n      if (this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].defaultValue) {\n        this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].defaultValue = false;\n      } else {\n        this.categories[params[0]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].defaultValue = true;\n        this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[3]].defaultValue = true;\n      }\n    }\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    this.canExit=false;  \n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n\n  ingoreDefaultAction(e) {\n    e.preventDefault();\n  }\n  onShowCategory() {\n    this.showProfileName = !this.showProfileName;\n  }\n\n  onSelectPicto(e, picto) {\n    e.preventDefault();\n    this.canExit=false;  \n    this.form.patchValue({ Picto: picto });\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n\n  onShowPictoList(e) {\n    e.preventDefault();\n    this.isPictoListShow = !this.isPictoListShow;\n  }\n \n  openDialog() {\n    const dialogRef = this.dialog.open(UpdateProfilComponent,{\n      data:{\n        matIconList:this.matIconList,\n        form:this.form,\n        tags:this.tags\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        \n      }\n    });\n  }\n\n  isExpanded(forms:any[]){\n   let isExpend=false;\n    for (const form of forms) {\n      if(form.defaultValue){\n        isExpend=true;\n      }\n      \n    }\n  }\n\n  onCheckConditionLocationValue(iscondition,location, conditionValue){\n    if(!iscondition){\n      return true;\n    }\n    if(location.level===1){\n      if(this.categories[location.categoryIndex].forms[location.currentIndex].type==='checkbox_multiple'){\n        const array=this.categories[location.categoryIndex].forms[location.currentIndex].defaultValue.filter((check)=>check.checked)\n        let checked=false;\n        for(var i = 0; i < array.length; i++) {\n          if (array[i].value == conditionValue) {\n              checked = true;\n              break;\n            }\n        }\n        return checked;\n      }else{\n        return this.categories[location.categoryIndex].forms[location.currentIndex].value===conditionValue\n      }     \n    }else if(location.level===2){\n      if(this.categories[location.categoryIndex].forms[location.formIndex].forms[location.currentIndex].type==='checkbox_multiple'){\n        const array=this.categories[location.categoryIndex].forms[location.formIndex].forms[location.currentIndex].defaultValue.filter((check)=>check.checked)\n        let checked=false;\n        for(var i = 0; i < array.length; i++) {\n          if (array[i].value == conditionValue) {\n              checked = true;\n              break;\n            }\n        }\n        return checked;\n      }else{\n        return this.categories[location.categoryIndex].forms[location.formIndex].forms[location.currentIndex].value===conditionValue\n      }\n    }else if(location.level===3){\n      if(this.categories[location.categoryIndex].forms[location.formIndex].forms[location.subIndex].forms[location.currentIndex].type==='checkbox_multiple'){\n        const array=this.categories[location.categoryIndex].forms[location.formIndex].forms[location.subIndex].forms[location.currentIndex].defaultValue.filter((check)=>check.checked)\n        let checked=false;\n        for(var i = 0; i < array.length; i++) {\n          if (array[i].value == conditionValue) {\n              checked = true;\n              break;\n            }\n        }\n        return checked;\n      }else{\n        return this.categories[location.categoryIndex].forms[location.formIndex].forms[location.subIndex].forms[location.currentIndex].value===conditionValue\n      }\n    }else{\n      return true\n    }\n \n  }\n\n  checkSubForm(forms){\n    let hasSubForm=false;\n    for (const form of forms) {\n      if(form.forms && form.forms.length>0){\n        hasSubForm=true;\n        break;\n      }\n    }\n    return hasSubForm\n  }\n\n  onSelectMenu(i){\n    this.selectedMenu=i\n  }\n\n}\n","<mat-card [ngStyle]=\"_loading_table && {'overflow-y': 'hidden', 'height': '100%',\n'display': 'flex', 'position': 'absolute'}\" class=\"full-height\"\n          style=\"background: #F4F7F9 0% 0% no-repeat padding-box;\">\n    <div class=\"main-all-ticket-list\" *ngIf=\"onboardingList\">\n        <div class=\"page-title-container\">\n\n            <div class=\"page-title\">\n                Suivi des demandes\n            </div>\n\n            <div class=\"page-search\">\n                <mat-icon>search</mat-icon>\n                <input [(ngModel)]=\"inputSearch\" class=\"search-box\" placeholder=\"Recherche\"\n                       type=\"text\">\n\n                <img (click)=\"cancelSearch()\" *ngIf=\"inputSearch && inputSearch != ''\"\n                     [src]=\"'/assets/icons/search_off-24px.svg'\">\n            </div>\n        </div>\n\n        <div class=\"content-view-list-ticket\">\n            <span class=\"mat-tab-left\">\n                Vous avez actuellement\n\n                <span *ngIf=\"index == 0\" class=\"mat-tab-left-count\">\n                    {{ onboardingList?.totalElements }} ticket(s)\n                </span>\n\n                <!--<span *ngIf=\"index == 1\" class=\"mat-tab-left-count\">\n                    {{_loading_tickets_closed ? ticketClosedNb : closed?.totalElements}} ticket(s)\n                </span>-->\n            </span>\n            <mat-tab-group [@.disabled]=\"true\" class=\"list-ticket-tab\" [(selectedIndex)]=\"index\"\n                           (selectedTabChange)=\"triggerChange($event)\">\n                <mat-tab style=\"background-image: none;\">\n                    <ng-template mat-tab-label>\n                        Onboarding ({{onboardingList?.totalElements || onboardingList?.data?.length}})\n                    </ng-template>\n                    <ng-template matTabContent>\n                        <div *ngIf=\"_loading_table || !onboardingList\" class=\"bt-spinner\"></div>\n\n                        <div [ngStyle]=\"_loading_table && {'margin-bottom': '100vh'}\"></div>\n\n                        <div [class.ticket-list]=\"!_loading_table\">\n                            <ngx-design-table *ngIf=\"onboardingList\" [columnDefinitions]=\"columnDefinitions\"\n                                              [displayDetail]=\"false\"\n                                              [data]=\"onboardingList\"\n                                              [lang]=\"lang\"\n                                              [btnOverride]=\"true\"\n                                              [inputSearch]=\"inputSearch\"\n                                              [EmptyRow]=\"true\"\n                                              [displayDetail]=\"true\"\n                                              [blockDetails]=\"true\">\n                            </ngx-design-table>\n                        </div>\n                    </ng-template>\n                </mat-tab>\n                <!--<mat-tab>\n                    <ng-template mat-tab-label>\n                        Offboarding\n                        ({{_loading_tickets_closed ? ticketClosedNb : (closed?.totalElements || closed?.data?.length)}})\n                        <span *ngIf=\"_loading_tickets_closed\" class=\"three-quarters-loader\"></span>\n                    </ng-template>\n                    <ng-template matTabContent>\n                        <div *ngIf=\"_loading_table || !closed\" class=\"bt-spinner\"></div>\n\n                        <div [ngStyle]=\"_loading_table && {'margin-bottom': '100vh'}\"></div>\n\n                        <div [class.ticket-list]=\"!_loading_table\">\n                            <ngx-design-table *ngIf=\"closed\" [columnDefinitions]=\"columnDefinitionsClosed\"\n                                              [displayDetail]=\"true\"\n                                              [displayComponent]=\"\"\n                                              [data]=\"closed\"\n                                              [lang]=\"lang\"\n                                              [btnOverride]=\"true\"\n                                              [inputSearch]=\"inputSearch\"\n                                              [EmptyRow]=\"true\">\n                            </ngx-design-table>\n                        </div>\n                    </ng-template>\n                </mat-tab>-->\n            </mat-tab-group>\n        </div>\n    </div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { OnboardingService } from '../onboarding.service';\nimport {CellsComponentList, CoreMatTable, CoreMatTableInterface, displayedColumnsInterface, TableService} from \"table\";\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'lib-onboarding-list',\n  templateUrl: './onboarding-list.component.html',\n  styleUrls: ['./onboarding-list.component.scss']\n})\nexport class OnboardingListComponent implements OnInit {\n  onboardingList: any\n  inputSearch = '';\n  public search: string = '';\n  public columnDefinitions: displayedColumnsInterface[] = [\n    {\n        key: 'createdAt',\n        value: 'Date de création',\n        order: 1,\n        class: 'u-2',\n        module: CellsComponentList.DateFormat,\n        sort: true\n    },\n    {\n        key: 'ContactName',\n        value: 'Contact',\n        order: 2,\n        class: 'u-2',\n        sort: true,\n        module: CellsComponentList.NameAvatar,\n        override: ['ContactName', 'Email'],\n    },\n  ];\n  localService: any;\n  public _loading_table = true;\n  private HiddenIndex = 0;\n  public index = 0;\n  lang = 'fr';\n\n  cancelSearch() {\n    this.inputSearch = '';\n  }\n\n  constructor(\n    private service:OnboardingService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  async ngOnInit() {\n    setTimeout(async () => {\n      await this.service.getAllOnboarding();\n    }, 500);\n    this.service.onboarding.subscribe((onboarding)=>{\n      console.log(onboarding);\n      setTimeout(() => {\n        this._loading_table = false;\n      }, 2000);\n\n      if(onboarding){\n        //this.onboardingList=onboarding;\n        let x = onboarding.map((row) => {\n          row.ContactName = row.vcontacts[0].Name;\n          row.Email = row.vcontacts[0].Email;\n          return row;\n        })\n        console.log(x);\n        this.onboardingList = new CoreMatTable(x,\n            {\n              active: 'CreatedDate', direction: 'desc'\n          }, {active: '', valueStart: null, valueEnd: null}, 15, true, true);\n      }\n    })\n  }\n\n  triggerChange($event) {\n    if ($event.index !== this.HiddenIndex) {\n        this._loading_table = true;\n\n\n        this.index = $event.index;\n        this.router.navigate(\n            [],\n            {\n                relativeTo: this.route,\n                queryParams: {page: null, tab: $event.index + 1},\n                queryParamsHandling: 'merge', // remove to replace all query params by provided\n            });\n        this.HiddenIndex = $event.index\n        setTimeout(() => {\n            this._loading_table = false;\n        }, 2000);\n    }\n}\n\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { OnboardingComponent } from './onboarding.component';\nimport { OnboardingInterface } from '../interface/OnboardingInterface';\nimport { OnboardingService } from './onboarding.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';;\nimport { TemplateProfileCreateComponent } from './template-profile-create/template-profile-create.component';\nimport { TemplateProfileListComponent } from './template-profile-list/template-profile-list.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { SubTemplateProfileComponent } from './components/sub-template-profile/sub-template-profile.component';\nimport { MaterialElevationDirective } from './directives/elevation';\nimport { UpdateProfilComponent } from './components/update-profil/update-profil.component';\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\nimport { ExitConfirmComponent } from './components/exit-confirm/exit-confirm.component';\nimport { OnboardingCreateComponent } from './onboarding-create/onboarding-create.component';\nimport { SubOnboardingCreateComponent } from './components/sub-onboarding-create/sub-onboarding-create.component';\nimport { OnboardingListComponent } from './onboarding-list/onboarding-list.component';\nimport {TableModule} from 'table';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nexport const onBoardingRoutes: Routes = [\n  {\n    path: 'onboarding',\n    component: OnboardingComponent,\n    children: [\n      {\n        path: 'template-builder/:id',\n        component: TemplateProfileCreateComponent,\n        canDeactivate: [CanDeactivateGuard],\n      },\n      {\n        path: '',\n        component: TemplateProfileListComponent\n      },\n      {\n        path: 'onboarding',\n        component: OnboardingListComponent\n      },\n      {\n        path: 'onboarding/:id',\n        component: OnboardingCreateComponent\n      }\n    ]\n  },\n\n  // { path: '', redirectTo: '/profil-list', pathMatch: 'full' },\n]\n@NgModule({\n  declarations: [\n    MaterialElevationDirective,\n    OnboardingComponent,\n    TemplateProfileCreateComponent,\n    OnboardingCreateComponent,\n    SubOnboardingCreateComponent,\n    TemplateProfileListComponent,\n    SubTemplateProfileComponent,\n    UpdateProfilComponent,\n    ExitConfirmComponent,\n    OnboardingListComponent\n  ],\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatSelectModule,\n    MatInputModule,\n    MatChipsModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    MatSortModule,\n    MatTableModule,\n    RouterModule.forChild(onBoardingRoutes),\n    ScrollToModule.forRoot(),\n    DragDropModule,\n    MatCardModule,\n    MatDialogModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    TableModule,\n    MatTabsModule\n  ],\n  providers: [OnboardingService, CanDeactivateGuard],\n  entryComponents:[UpdateProfilComponent, ExitConfirmComponent],\n  exports:\n    [\n      OnboardingComponent,\n      HttpClientModule,\n      TemplateProfileCreateComponent,\n      TemplateProfileListComponent,\n      OnboardingListComponent,\n      OnboardingCreateComponent,\n      RouterModule,\n      MatTabsModule\n    ]\n})\n\nexport class OnboardingModule {\n  constructor(@Optional() @SkipSelf() parentModule?: OnboardingModule) {\n    if (parentModule) {\n      throw new Error(\n        'OnboardingModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: OnboardingInterface): ModuleWithProviders<OnboardingModule> {\n    return {\n      ngModule: OnboardingModule,\n      providers: [\n        { provide: '__NgxOnboarding__', useValue: config },\n        OnboardingService\n      ]\n    };\n  }\n}\n"]}