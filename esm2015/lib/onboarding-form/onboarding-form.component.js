import { __awaiter, __decorate } from "tslib";
import { Component } from '@angular/core';
import { OnboardingService } from '../onboarding.service';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';
import { ActivatedRoute } from '@angular/router';
let OnboardingFormComponent = class OnboardingFormComponent {
    constructor(service, fb, route) {
        this.service = service;
        this.fb = fb;
        this.route = route;
        this.isSelected = false;
        this.id = "0";
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.onCreateDynamicForm();
            yield this.service.getContacts();
            yield this.service.getAllProfil();
            this.service._contacts.subscribe((contacts) => this.contacts = contacts);
            this.service._templates.subscribe((data) => this.templates = data);
            this.id = this.route.snapshot.paramMap.get("id");
            if (this.id !== "0") {
                this.currentOnboarding = yield this.service.getOnboarding(this.id);
                // this.onboardingForm.patchValue(this.currentOnboarding);
            }
            console.log(this.templates);
        });
    }
    onSelectContactTemplate() {
        this.isSelected = true;
    }
    onCreateDynamicForm() {
        this.onboardingForm = this.fb.group({
            contactId: ['', Validators.required],
            templateId: [0, Validators.required]
        });
    }
    onPopulateValue() {
        const user = this.categories[0].forms;
        const populateContact = user.map((u) => (Object.assign(Object.assign({}, u), { value: this.currentUser[u.key] })));
        this.categories[0].forms = populateContact;
    }
    onSelect(id) {
        this.categories = this.templates.find((t) => t._id === id).categories;
        if (this.contacts) {
            this.onPopulateValue();
        }
    }
    onSelectUser(Id) {
        this.currentUser = this.contacts.find((u) => u.Id === Id);
        if (this.categories) {
            this.onPopulateValue();
        }
    }
    onAddNewCategory(e) {
        e.preventDefault();
        this.categories.push({
            name: "",
            editable: true,
            deleteable: true,
            expandMore: true,
            suffixEndpoint: "",
            forms: [
                {
                    label: "",
                    value: null,
                    size: 80,
                    isMandatory: true,
                    type: "text",
                    deleteable: true,
                    editable: true
                },
            ],
        });
    }
    onAddNewField(...params) {
        const length = params.length;
        const forms = length === 1
            ? this.categories[params[0]].forms
            : length === 2
                ? this.categories[params[0]].forms[params[1]].forms
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;
        forms.push({
            label: "",
            value: null,
            size: 80,
            isMandatory: true,
            type: "text",
            deleteable: true,
            editable: true,
            subLevel: params.length
        });
    }
    onAddNewSubLevelField(...params) {
        console.log(params.length - 1);
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms[params[length - 1]]
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]]
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];
        forms.expandMore = true;
        forms.forms = [];
        forms.forms.push({
            label: "",
            value: null,
            size: 80,
            isMandatory: true,
            type: "text",
            deleteable: true,
            editable: true,
            subLevel: params.length,
            expandMore: true
        });
        console.log(this.categories);
    }
    onRemoveField(...params) {
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;
        forms.splice(params[length - 1], 1);
    }
    onRemoveCategory(e, i) {
        e.preventDefault();
        this.categories.splice(i, 1);
    }
    onChangeCategory() {
        return this.categories.every((cat) => cat.name !== "" &&
            cat.forms.every((field) => field.label !== "" && field.type !== ""));
    }
    onChangeType(type, ...params) {
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms;
        if (type === "select" || type === "radio") {
            forms[params[length - 1]].value = [];
        }
        else if (type === "text") {
            forms[params[length - 1]].value = "";
        }
        else {
            forms[params[length - 1]].value = false;
        }
    }
    onKeyPress(event, ...params) {
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms[params[length - 1]]
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]]
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];
        if (event.key === ";") {
            const exist = forms.value.find((opt) => opt.toLocaleLowerCase() ===
                event.target.value.split(";")[0].toLocaleLowerCase());
            if (!exist) {
                forms.value.push(event.target.value.split(";")[0]);
                event.target.value = "";
            }
            else {
                event.target.value = "";
            }
        }
    }
    removeKeyword(keyword, ...params) {
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms[params[length - 1]]
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]]
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];
        forms.value = forms.value.filter((option) => option !== keyword);
    }
    onExpendMore(event, ...params) {
        if (event) {
            event.preventDefault();
        }
        console.log(event);
        const length = params.length;
        const forms = length === 1
            ? this.categories[params[0]] :
            length === 2 ? this.categories[params[0]].forms[params[length - 1]] :
                length === 3 ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]] :
                    this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];
        forms.expandMore = !forms.expandMore;
    }
    addKeywordFromInput(event, ...params) {
        const input = event.input;
        const value = event.value;
        const length = params.length;
        const forms = length === 2
            ? this.categories[params[0]].forms[params[length - 1]]
            : length === 3
                ? this.categories[params[0]].forms[params[1]].forms[params[length - 1]]
                : this.categories[params[0]].forms[params[1]].forms[params[2]].forms[params[length - 1]];
        if (value) {
            const exist = forms.value.find((opt) => opt.toLocaleLowerCase() === event.value.toLocaleLowerCase());
            if (!exist) {
                forms.value.push(value.trim());
                input.value = "";
            }
            else {
                input.value = "";
            }
        }
    }
    drop(event) {
        console.log("log", this.categories);
        if (event.previousContainer === event.container) {
            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);
        }
        else {
            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);
        }
    }
    ingoreDefaultAction(e) {
        e.preventDefault();
    }
};
OnboardingFormComponent.ctorParameters = () => [
    { type: OnboardingService },
    { type: FormBuilder },
    { type: ActivatedRoute }
];
OnboardingFormComponent = __decorate([
    Component({
        selector: 'lib-onboarding-form',
        template: "<div class=\"container\">\n    <div class=\"content\">\n        <h3>Nouvel Onboarding</h3>\n        <p class=\"sub-title\">Cr\u00E9ez ici, l\u2019onboarding de votre nouveau collaborateur.</p>\n        <form [formGroup]=\"onboardingForm\">\n            <div class=\"select-contact\" *ngIf=\"!isSelected\">\n                <h3>\n                    Onboarding de votre nouveau collaborateur\n                </h3>\n                <p>S\u00E9lectionnez le nom de votre nouveau collaborateur afin de pouvoir d\u00E9marrer son onboarding.</p>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Contact</mat-label>\n                    <mat-select formControlName=\"contactId\" required (selectionChange)=\"onSelectUser($event.value)\">\n                        <mat-option *ngFor=\"let contact of contacts\" [value]=\"contact.Id\">{{contact.Name}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Template</mat-label>\n                    <mat-select formControlName=\"templateId\" required (selectionChange)=\"onSelect($event.value)\">\n                        <mat-option *ngFor=\"let template of templates\" [value]=\"template._id\">{{template.Name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button\n                    [style.opacity]=\"(onboardingForm.get('ContactId')?.value==='' || onboardingForm.get('templateId')?.value=='') ? 0.4 : 1\"\n                    [disabled]=\"onboardingForm.get('ContactId')?.value==='' || onboardingForm.get('templateId')?.value==''\"\n                    mat-raised-button color=\"primary\" (click)='onSelectContactTemplate()'>\n                    {{id !== \"0\" ? 'Modifier l\u2019onboarding' :'D\u00E9marrer l\u2019onboarding'}}\n                </button>\n            </div>\n\n            <div class=\"category\" *ngIf=\"isSelected\">\n                <div cdkDropListGroup>\n                    <div class=\"example-list mt-20 onboarding-mat-stepper\" #parentList=\"cdkDropList\" cdkDropList\n                        [cdkDropListData]=\"categories\" (cdkDropListDropped)=\"drop($event)\">\n                        <mat-horizontal-stepper [linear]=\"true\" #stepper labelPosition=\"bottom\">\n                            <mat-step *ngFor=\"let category of categories;  let i=index\" [stepControl]=\"onboardingForm\"\n                                [label]=\"category.name\" class=\"category-item\">\n                                <div class=\"field-content\">\n                                    <div class=\"field-item\">\n                                        <h2>{{category.name}}</h2>\n                                    </div>\n\n                                    <div #childList=\"cdkDropList\" *ngIf=\"category.forms\"\n                                        [cdkDropListData]=\"category.forms\" cdkDropList\n                                        (cdkDropListDropped)=\"drop($event)\">\n                                        <ng-container>\n                                            <div class=\"field\" *ngFor=\"let field of category.forms;let j=index\" cdkDrag>\n                                                <lib-sub-onboarding [field]=\"field\" [length]=\"category?.forms?.length\"\n                                                    [i]=\"i\" [j]=\"j\"\n                                                    (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j)\"\n                                                    (onKeyPress)=\"onKeyPress($event.event,i,j)\"\n                                                    (onAddNewField)=\"onAddNewField(i)\"\n                                                    (onRemoveField)=\"onRemoveField(i,j)\"\n                                                    (onChangeType)=\"onChangeType(field.type,i,j)\"\n                                                    (onRemoveKeyword)=\"removeKeyword($event.event,i,j)\"\n                                                    (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j)\"\n                                                    (onExpendMore)=\"onExpendMore(null,i,j)\">\n                                                    <div class=\"child\">\n                                                        <div #childList=\"cdkDropList\" *ngIf=\"field.forms\"\n                                                            [cdkDropListData]=\"field.forms\" cdkDropList\n                                                            (cdkDropListDropped)=\"drop($event)\">\n                                                            <div class=\"field\"\n                                                                *ngFor=\"let child of field.forms;let k=index\" cdkDrag>\n                                                                <lib-sub-onboarding [field]=\"child\"\n                                                                    [length]=\"field?.forms?.length\" [i]=\"j\" [j]=\"k\"\n                                                                    (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j,k)\"\n                                                                    (onKeyPress)=\"onKeyPress($event.event,i,j,k)\"\n                                                                    (onAddNewField)=\"onAddNewField(i, j)\"\n                                                                    (onRemoveField)=\"onRemoveField(i,j,k)\"\n                                                                    (onChangeType)=\"onChangeType(child.type,i,j,k)\"\n                                                                    (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k)\"\n                                                                    (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k)\"\n                                                                    (onExpendMore)=\"onExpendMore(null,i,j,k)\">\n                                                                    <div class=\"child\">\n                                                                        <div #childList=\"cdkDropList\"\n                                                                            *ngIf=\"child.forms\"\n                                                                            [cdkDropListData]=\"child.forms\" cdkDropList\n                                                                            (cdkDropListDropped)=\"drop($event)\">\n                                                                            <div class=\"field\"\n                                                                                *ngFor=\"let c2 of child.forms;let l=index\"\n                                                                                cdkDrag>\n                                                                                <lib-sub-onboarding [field]=\"c2\"\n                                                                                    [length]=\"child?.forms?.length\"\n                                                                                    [i]=\"k\" [j]=\"l\"\n                                                                                    (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j,k,l)\"\n                                                                                    (onKeyPress)=\"onKeyPress($event.event,i,j,k,l)\"\n                                                                                    (onAddNewField)=\"onAddNewField(i,j,k)\"\n                                                                                    (onRemoveField)=\"onRemoveField(i,j,k,l)\"\n                                                                                    (onChangeType)=\"onChangeType(c2.type,i,j,k,l)\"\n                                                                                    (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k,l)\"\n                                                                                    (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k,l)\"\n                                                                                    (onExpendMore)=\"onExpendMore(null,i,j,k,l)\">\n                                                                                    <div class=\"child\">\n                                                                                    </div>\n                                                                                </lib-sub-onboarding>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </lib-sub-onboarding>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </lib-sub-onboarding>\n                                            </div>\n                                        </ng-container>\n\n                                    </div>\n                                    <button mat-raised-button style=\"float: left;\" class=\"next-step\" color=\"primary\"\n                                        matStepperPrevious>Pr\u00E9c\u00E9dent</button>\n                                    <button mat-raised-button class=\"next-step\" color=\"primary\"\n                                        matStepperNext>Suivant</button>\n                                </div>\n\n                            </mat-step>\n                            <mat-step>\n                                <ng-template matStepLabel>Review</ng-template>\n                                <h5>You are now done.</h5>\n                                <div>\n                                    <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button> &nbsp;\n                                    &nbsp;\n                                    <button mat-raised-button color=\"accent\" type=\"submit\">Submit</button> &nbsp; &nbsp;\n                                    <button mat-raised-button color=\"warn\" (click)=\"stepper.reset()\">Reset</button>\n                                </div>\n                            </mat-step>\n                            <!-- <ng-template matStepperIcon=\"phone\">\n                              <mat-icon>phone</mat-icon>\n                          </ng-template> -->\n\n                        </mat-horizontal-stepper>\n                        <!-- <div class=\"category-item\" *ngFor=\"let category of categories;  let i=index\" cdkDrag>\n                            <div class=\"field-content\">\n                                <div class=\"field-item\">\n                                    <h2>{{category.name}}</h2>\n                                </div>\n\n                                <div #childList=\"cdkDropList\" *ngIf=\"category.forms\" [cdkDropListData]=\"category.forms\"\n                                    cdkDropList (cdkDropListDropped)=\"drop($event)\">\n                                    <ng-container>\n                                        <div class=\"field\" *ngFor=\"let field of category.forms;let j=index\" cdkDrag>\n                                            <lib-sub-onboarding [field]=\"field\" [length]=\"category?.forms?.length\"\n                                                [i]=\"i\" [j]=\"j\"\n                                                (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j)\"\n                                                (onKeyPress)=\"onKeyPress($event.event,i,j)\"\n                                                (onAddNewField)=\"onAddNewField(i)\" (onRemoveField)=\"onRemoveField(i,j)\"\n                                                (onChangeType)=\"onChangeType(field.type,i,j)\"\n                                                (onRemoveKeyword)=\"removeKeyword($event.event,i,j)\"\n                                                (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j)\"\n                                                (onExpendMore)=\"onExpendMore(null,i,j)\">\n                                                <div class=\"child\">\n                                                    <div #childList=\"cdkDropList\" *ngIf=\"field.forms\"\n                                                        [cdkDropListData]=\"field.forms\" cdkDropList\n                                                        (cdkDropListDropped)=\"drop($event)\">\n                                                        <div class=\"field\" *ngFor=\"let child of field.forms;let k=index\"\n                                                            cdkDrag>\n                                                            <lib-sub-onboarding [field]=\"child\"\n                                                                [length]=\"field?.forms?.length\" [i]=\"j\" [j]=\"k\"\n                                                                (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j,k)\"\n                                                                (onKeyPress)=\"onKeyPress($event.event,i,j,k)\"\n                                                                (onAddNewField)=\"onAddNewField(i, j)\"\n                                                                (onRemoveField)=\"onRemoveField(i,j,k)\"\n                                                                (onChangeType)=\"onChangeType(child.type,i,j,k)\"\n                                                                (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k)\"\n                                                                (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k)\"\n                                                                (onExpendMore)=\"onExpendMore(null,i,j,k)\">\n                                                                <div class=\"child\">\n                                                                    <div #childList=\"cdkDropList\" *ngIf=\"child.forms\"\n                                                                        [cdkDropListData]=\"child.forms\" cdkDropList\n                                                                        (cdkDropListDropped)=\"drop($event)\">\n                                                                        <div class=\"field\"\n                                                                            *ngFor=\"let c2 of child.forms;let l=index\"\n                                                                            cdkDrag>\n                                                                            <lib-sub-onboarding [field]=\"c2\"\n                                                                                [length]=\"child?.forms?.length\" [i]=\"k\"\n                                                                                [j]=\"l\"\n                                                                                (onAddKeywordFromInput)=\"addKeywordFromInput($event.event,i,j,k,l)\"\n                                                                                (onKeyPress)=\"onKeyPress($event.event,i,j,k,l)\"\n                                                                                (onAddNewField)=\"onAddNewField(i,j,k)\"\n                                                                                (onRemoveField)=\"onRemoveField(i,j,k,l)\"\n                                                                                (onChangeType)=\"onChangeType(c2.type,i,j,k,l)\"\n                                                                                (onRemoveKeyword)=\"removeKeyword($event.event,i,j,k,l)\"\n                                                                                (onAddNewSubLevelField)=\"onAddNewSubLevelField(i,j,k,l)\"\n                                                                                (onExpendMore)=\"onExpendMore(null,i,j,k,l)\">\n                                                                                <div class=\"child\">\n                                                                                </div>\n                                                                            </lib-sub-onboarding>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </lib-sub-onboarding>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </lib-sub-onboarding>\n                                        </div>\n                                    </ng-container>\n\n                                </div>\n\n                            </div>\n                        </div> -->\n                    </div>\n\n                </div>\n                <!-- <div class=\"action\">\n                    <a [routerLink]=\"[service.mainPath]\" role=\"button\" mat-raised-button color=\"basic\">Liste des\n                        onboarding</a>\n                    <button mat-raised-button color=\"basic\" type=\"submit\">Valider</button>\n                </div> -->\n            </div>\n\n        </form>\n    </div>\n</div>",
        styles: ["::ng-deep .onboarding-mat-stepper .mat-horizontal-stepper-header-container{display:none!important}.container{background:no-repeat padding-box #f4f7f9;width:100%;height:auto;min-height:100%}.container .content{width:99%;height:100%;padding-left:1%}.container .content h3{font:bold 32px/30px Nexa Text;letter-spacing:0;color:#171f26;padding-top:20px}.container .content p{font:20px/26px Nexa Text;letter-spacing:0;color:#171f26}.container .content p.sub-title{max-width:300px}.container .content .select-contact{max-width:70%;margin:5% auto auto;background:no-repeat padding-box #fff;border:1px solid #dce4e9;border-radius:6px;padding:5%}.container .content .select-contact button{float:right;text-align:center;border:1px solid #543cb6;border-radius:7px;padding:.7em 2em .5em;display:flex;align-items:center;background-color:transparent;font:bold 15px/17px Nexa;letter-spacing:0;color:#543cb6;align-self:flex-end}.container .content .category .onboarding-mat-stepper mat-horizontal-stepper .next-step{float:right}.container .action{width:100%;display:flex;justify-content:space-between}.input-category-name{font-size:15px;font-weight:500}.example-full-width{width:100%}.field-item{display:flex;justify-content:space-between;align-items:center}.field-action{width:10%}.field-size{width:90%;margin:auto 2% auto auto}hr{margin:50px 0}::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex{background-color:#fff}.category-action{display:flex;width:100%}.delete-field{margin:auto 2%}.radio-group .mat-radio-button{margin-right:10px}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff;min-height:20px;font-size:10px}.move-icons{cursor:move}.category-item{display:flex;align-items:baseline;width:100%}.field-content{width:100%}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating,.example-list.cdk-drop-list-dragging .category-item:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.child{margin-left:5%}"]
    })
], OnboardingFormComponent);
export { OnboardingFormComponent };
//# sourceMappingURL=data:application/json;base64,