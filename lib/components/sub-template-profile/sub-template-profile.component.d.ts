import { OnInit, EventEmitter } from '@angular/core';
import { FormControl } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class SubTemplateProfileComponent implements OnInit {
    field: any;
    length: any;
    i: any;
    j: any;
    onAddKeywordFromInput: EventEmitter<any>;
    onKeyPress: EventEmitter<any>;
    onDrop: EventEmitter<any>;
    onAddNewField: EventEmitter<any>;
    onRemoveField: EventEmitter<any>;
    onChangeType: EventEmitter<any>;
    onRemoveKeyword: EventEmitter<any>;
    onAddNewSubLevelField: EventEmitter<any>;
    onExpendMore: EventEmitter<any>;
    onChangeLabel: EventEmitter<any>;
    onCheckedChip: EventEmitter<any>;
    onCheckedDefault: EventEmitter<any>;
    onGetConditionValues: EventEmitter<any>;
    conditionData: any[];
    chipControl: FormControl;
    separatorKeysCodes: number[];
    currentChip: string;
    prevValue: string;
    showCondition: boolean;
    constructor();
    ngOnInit(): void;
    drop(event: any): void;
    addKeywordFromInput(event: any, i: any, j: any): void;
    keyUp(event: any, i: any, j: any): void;
    addNewField(event: any, i: any): void;
    removeField(event: any, i: any, j: any): void;
    changeType(type: any, i: any, j: any): void;
    removeKeyword(event: any, i: any, j: any): void;
    addNewSubLevelField(e: any): void;
    expendMore(e: any, field: any): void;
    getConditionValues(): void;
    ingoreDefaultAction(e: any): void;
    changeLabel(label: any, key: any): void;
    toggleChip: (chip: any) => void;
    onEditChip(chip: any): void;
    get chips(): any;
    checkedDefault(value: any): void;
    onShowCondition(event?: any): void;
    static ɵfac: i0.ɵɵFactoryDef<SubTemplateProfileComponent>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<SubTemplateProfileComponent, "lib-sub-category", never, { "field": "field"; "length": "length"; "i": "i"; "j": "j"; "conditionData": "conditionData"; }, { "onAddKeywordFromInput": "onAddKeywordFromInput"; "onKeyPress": "onKeyPress"; "onDrop": "onDrop"; "onAddNewField": "onAddNewField"; "onRemoveField": "onRemoveField"; "onChangeType": "onChangeType"; "onRemoveKeyword": "onRemoveKeyword"; "onAddNewSubLevelField": "onAddNewSubLevelField"; "onExpendMore": "onExpendMore"; "onChangeLabel": "onChangeLabel"; "onCheckedChip": "onCheckedChip"; "onCheckedDefault": "onCheckedDefault"; "onGetConditionValues": "onGetConditionValues"; }, never>;
}
