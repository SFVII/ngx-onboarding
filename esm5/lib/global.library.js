export var downLoadFile = function (x, type, filename) {
    var newBlob = new Blob([x], { type: 'binary' });
    // IE doesn't allow using a blob object directly as link href
    // instead it is necessary to use msSaveOrOpenBlob
    if (window.navigator && window.navigator.msSaveOrOpenBlob) {
        window.navigator.msSaveOrOpenBlob(newBlob);
        return;
    }
    // For other browsers:
    // Create a link pointing to the ObjectURL containing the blob.
    var data = window.URL.createObjectURL(newBlob);
    var link = document.createElement('a');
    link.href = data;
    link.download = filename;
    // this is necessary as link.click() does not work on the latest firefox
    link.dispatchEvent(new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
        view: window
    }));
    setTimeout(function () {
        // For Firefox it is necessary to delay revoking the ObjectURL
        window.URL.revokeObjectURL(data);
        link.remove();
    }, 100);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLmxpYnJhcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbmJvYXJkaW5nLyIsInNvdXJjZXMiOlsibGliL2dsb2JhbC5saWJyYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxVQUFDLENBQU0sRUFBRSxJQUFZLEVBQUUsUUFBZ0I7SUFDL0QsSUFBTSxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ2xELDZEQUE2RDtJQUM3RCxrREFBa0Q7SUFDbEQsSUFBSSxNQUFNLENBQUMsU0FBUyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLEVBQUU7UUFDdkQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzQyxPQUFPO0tBQ1Y7SUFDRCxzQkFBc0I7SUFDdEIsK0RBQStEO0lBQy9ELElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDekIsd0VBQXdFO0lBQ3hFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxVQUFVLENBQUMsT0FBTyxFQUFFO1FBQ3ZDLE9BQU8sRUFBRSxJQUFJO1FBQ2IsVUFBVSxFQUFFLElBQUk7UUFDaEIsSUFBSSxFQUFFLE1BQU07S0FDZixDQUFDLENBQUMsQ0FBQztJQUNKLFVBQVUsQ0FBQztRQUNQLDhEQUE4RDtRQUM5RCxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ1osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRvd25Mb2FkRmlsZSA9ICh4OiBhbnksIHR5cGU6IHN0cmluZywgZmlsZW5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgbmV3QmxvYiA9IG5ldyBCbG9iKFt4XSwgeyB0eXBlOiAnYmluYXJ5JyB9KTtcclxuICAgIC8vIElFIGRvZXNuJ3QgYWxsb3cgdXNpbmcgYSBibG9iIG9iamVjdCBkaXJlY3RseSBhcyBsaW5rIGhyZWZcclxuICAgIC8vIGluc3RlYWQgaXQgaXMgbmVjZXNzYXJ5IHRvIHVzZSBtc1NhdmVPck9wZW5CbG9iXHJcbiAgICBpZiAod2luZG93Lm5hdmlnYXRvciAmJiB3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IpIHtcclxuICAgICAgICB3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IobmV3QmxvYik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgLy8gRm9yIG90aGVyIGJyb3dzZXJzOlxyXG4gICAgLy8gQ3JlYXRlIGEgbGluayBwb2ludGluZyB0byB0aGUgT2JqZWN0VVJMIGNvbnRhaW5pbmcgdGhlIGJsb2IuXHJcbiAgICBjb25zdCBkYXRhID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobmV3QmxvYik7XHJcbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gICAgbGluay5ocmVmID0gZGF0YTtcclxuICAgIGxpbmsuZG93bmxvYWQgPSBmaWxlbmFtZTtcclxuICAgIC8vIHRoaXMgaXMgbmVjZXNzYXJ5IGFzIGxpbmsuY2xpY2soKSBkb2VzIG5vdCB3b3JrIG9uIHRoZSBsYXRlc3QgZmlyZWZveFxyXG4gICAgbGluay5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KCdjbGljaycsIHtcclxuICAgICAgICBidWJibGVzOiB0cnVlLFxyXG4gICAgICAgIGNhbmNlbGFibGU6IHRydWUsXHJcbiAgICAgICAgdmlldzogd2luZG93XHJcbiAgICB9KSk7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAvLyBGb3IgRmlyZWZveCBpdCBpcyBuZWNlc3NhcnkgdG8gZGVsYXkgcmV2b2tpbmcgdGhlIE9iamVjdFVSTFxyXG4gICAgICAgIHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKGRhdGEpO1xyXG4gICAgICAgIGxpbmsucmVtb3ZlKCk7XHJcbiAgICB9LCAxMDApO1xyXG59Il19